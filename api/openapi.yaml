openapi: 3.0.3
info:
  contact:
    email: hello@merge.dev
    name: Merge Team
    url: https://www.merge.dev/
  description: The unified API for building rich integrations with multiple HR Information
    System platforms.
  title: Merge HRIS API
  version: "1.0"
servers:
- description: Production
  url: https://api.merge.dev/api/hris/v1
- description: Sandbox
  url: https://api-sandbox.merge.dev/api/hris/v1
paths:
  /account-token/{public_token}:
    get:
      description: Returns the account token for the end user with the provided public
        token.
      operationId: account_token_retrieve
      parameters:
      - explode: false
        in: path
        name: public_token
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountToken'
      security:
      - tokenAuth: []
      tags:
      - account-token
      x-accepts: application/json
  /available-actions:
    get:
      description: Returns a list of models and actions available for an account.
      operationId: available_actions_retrieve
      parameters:
      - description: Token identifying the end user.
        explode: false
        in: header
        name: X-Account-Token
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailableActions'
      security:
      - tokenAuth: []
      tags:
      - available-actions
      x-accepts: application/json
  /benefits:
    get:
      description: Returns a list of `Benefit` objects.
      operationId: benefits_list
      parameters:
      - description: Token identifying the end user.
        explode: false
        in: header
        name: X-Account-Token
        required: true
        schema:
          type: string
        style: simple
      - description: If provided, will only return objects created after this datetime.
        explode: true
        in: query
        name: created_after
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: If provided, will only return objects created before this datetime.
        explode: true
        in: query
        name: created_before
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: The pagination cursor value.
        examples:
          CursorExample:
            summary: Cursor Example
            value: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: If provided, will only return time off for this employee.
        examples:
          EmployeeId:
            summary: employee_id
        explode: true
        in: query
        name: employee_id
        required: false
        schema:
          type: string
        style: form
      - description: Which relations should be returned in expanded form. Multiple
          relation names should be comma separated without spaces.
        examples:
          ExpandEmployee:
            summary: Expand Employee
            value: employee
        explode: true
        in: query
        name: expand
        required: false
        schema:
          enum:
          - employee
          type: string
        style: form
      - description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
        explode: true
        in: query
        name: include_remote_data
        required: false
        schema:
          type: boolean
        style: form
      - description: If provided, will only return objects modified after this datetime.
        explode: true
        in: query
        name: modified_after
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: If provided, will only return objects modified before this datetime.
        explode: true
        in: query
        name: modified_before
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: The API provider's ID for the given object.
        explode: true
        in: query
        name: remote_id
        required: false
        schema:
          description: The third-party API ID of the matching object.
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBenefitList'
      security:
      - tokenAuth: []
      tags:
      - benefits
      x-accepts: application/json
  /benefits/{id}:
    get:
      description: Returns a `Benefit` object with the given `id`.
      operationId: benefits_retrieve
      parameters:
      - description: Token identifying the end user.
        explode: false
        in: header
        name: X-Account-Token
        required: true
        schema:
          type: string
        style: simple
      - description: Which relations should be returned in expanded form. Multiple
          relation names should be comma separated without spaces.
        examples:
          ExpandEmployee:
            summary: Expand Employee
            value: employee
        explode: true
        in: query
        name: expand
        required: false
        schema:
          enum:
          - employee
          type: string
        style: form
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
        explode: true
        in: query
        name: include_remote_data
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Benefit'
      security:
      - tokenAuth: []
      tags:
      - benefits
      x-accepts: application/json
  /companies:
    get:
      description: Returns a list of `Company` objects.
      operationId: companies_list
      parameters:
      - description: Token identifying the end user.
        explode: false
        in: header
        name: X-Account-Token
        required: true
        schema:
          type: string
        style: simple
      - description: If provided, will only return objects created after this datetime.
        explode: true
        in: query
        name: created_after
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: If provided, will only return objects created before this datetime.
        explode: true
        in: query
        name: created_before
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: The pagination cursor value.
        examples:
          CursorExample:
            summary: Cursor Example
            value: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
        explode: true
        in: query
        name: include_remote_data
        required: false
        schema:
          type: boolean
        style: form
      - description: If provided, will only return objects modified after this datetime.
        explode: true
        in: query
        name: modified_after
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: If provided, will only return objects modified before this datetime.
        explode: true
        in: query
        name: modified_before
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: The API provider's ID for the given object.
        explode: true
        in: query
        name: remote_id
        required: false
        schema:
          description: The third-party API ID of the matching object.
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCompanyList'
      security:
      - tokenAuth: []
      tags:
      - companies
      x-accepts: application/json
  /companies/{id}:
    get:
      description: Returns a `Company` object with the given `id`.
      operationId: companies_retrieve
      parameters:
      - description: Token identifying the end user.
        explode: false
        in: header
        name: X-Account-Token
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
        explode: true
        in: query
        name: include_remote_data
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
      security:
      - tokenAuth: []
      tags:
      - companies
      x-accepts: application/json
  /employee-payroll-runs:
    get:
      description: Returns a list of `EmployeePayrollRun` objects.
      operationId: employee_payroll_runs_list
      parameters:
      - description: Token identifying the end user.
        explode: false
        in: header
        name: X-Account-Token
        required: true
        schema:
          type: string
        style: simple
      - description: If provided, will only return objects created after this datetime.
        explode: true
        in: query
        name: created_after
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: If provided, will only return objects created before this datetime.
        explode: true
        in: query
        name: created_before
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: The pagination cursor value.
        examples:
          CursorExample:
            summary: Cursor Example
            value: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: If provided, will only return time off for this employee.
        examples:
          EmployeeId:
            summary: employee_id
        explode: true
        in: query
        name: employee_id
        required: false
        schema:
          type: string
        style: form
      - description: Which relations should be returned in expanded form. Multiple
          relation names should be comma separated without spaces.
        examples:
          ExpandEmployee,PayrollRun:
            summary: Expand Employee, Payroll_run
            value: employee,payroll_run
        explode: true
        in: query
        name: expand
        required: false
        schema:
          enum:
          - employee
          - employee,payroll_run
          - payroll_run
          type: string
        style: form
      - description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
        explode: true
        in: query
        name: include_remote_data
        required: false
        schema:
          type: boolean
        style: form
      - description: If provided, will only return objects modified after this datetime.
        explode: true
        in: query
        name: modified_after
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: If provided, will only return objects modified before this datetime.
        explode: true
        in: query
        name: modified_before
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: If provided, will only return employee payroll runs for this
          employee.
        examples:
          PayrollRunId:
            summary: payroll_run_id
        explode: true
        in: query
        name: payroll_run_id
        required: false
        schema:
          type: string
        style: form
      - description: The API provider's ID for the given object.
        explode: true
        in: query
        name: remote_id
        required: false
        schema:
          description: The third-party API ID of the matching object.
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEmployeePayrollRunList'
      security:
      - tokenAuth: []
      tags:
      - employee-payroll-runs
      x-accepts: application/json
  /employee-payroll-runs/{id}:
    get:
      description: Returns an `EmployeePayrollRun` object with the given `id`.
      operationId: employee_payroll_runs_retrieve
      parameters:
      - description: Token identifying the end user.
        explode: false
        in: header
        name: X-Account-Token
        required: true
        schema:
          type: string
        style: simple
      - description: Which relations should be returned in expanded form. Multiple
          relation names should be comma separated without spaces.
        examples:
          ExpandEmployee,PayrollRun:
            summary: Expand Employee, Payroll_run
            value: employee,payroll_run
        explode: true
        in: query
        name: expand
        required: false
        schema:
          enum:
          - employee
          - employee,payroll_run
          - payroll_run
          type: string
        style: form
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
        explode: true
        in: query
        name: include_remote_data
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeePayrollRun'
      security:
      - tokenAuth: []
      tags:
      - employee-payroll-runs
      x-accepts: application/json
  /employees:
    get:
      description: Returns a list of `Employee` objects.
      operationId: employees_list
      parameters:
      - description: Token identifying the end user.
        explode: false
        in: header
        name: X-Account-Token
        required: true
        schema:
          type: string
        style: simple
      - description: If provided, will only return employees for this company.
        examples:
          CompanyId:
            summary: company_id
        explode: true
        in: query
        name: company_id
        required: false
        schema:
          type: string
        style: form
      - description: If provided, will only return objects created after this datetime.
        explode: true
        in: query
        name: created_after
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: If provided, will only return objects created before this datetime.
        explode: true
        in: query
        name: created_before
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: The pagination cursor value.
        examples:
          CursorExample:
            summary: Cursor Example
            value: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: Which relations should be returned in expanded form. Multiple
          relation names should be comma separated without spaces.
        examples:
          ExpandEmployments,HomeLocation,WorkLocation,Manager,Team,Company:
            summary: Expand Employments, Home_location, Work_location, Manager, Team,
              Company
            value: employments,home_location,work_location,manager,team,company
        explode: true
        in: query
        name: expand
        required: false
        schema:
          enum:
          - company
          - employments
          - employments,company
          - employments,home_location
          - employments,home_location,company
          - employments,home_location,manager
          - employments,home_location,manager,company
          - employments,home_location,manager,team
          - employments,home_location,manager,team,company
          - employments,home_location,team
          - employments,home_location,team,company
          - employments,home_location,work_location
          - employments,home_location,work_location,company
          - employments,home_location,work_location,manager
          - employments,home_location,work_location,manager,company
          - employments,home_location,work_location,manager,team
          - employments,home_location,work_location,manager,team,company
          - employments,home_location,work_location,team
          - employments,home_location,work_location,team,company
          - employments,manager
          - employments,manager,company
          - employments,manager,team
          - employments,manager,team,company
          - employments,team
          - employments,team,company
          - employments,work_location
          - employments,work_location,company
          - employments,work_location,manager
          - employments,work_location,manager,company
          - employments,work_location,manager,team
          - employments,work_location,manager,team,company
          - employments,work_location,team
          - employments,work_location,team,company
          - home_location
          - home_location,company
          - home_location,manager
          - home_location,manager,company
          - home_location,manager,team
          - home_location,manager,team,company
          - home_location,team
          - home_location,team,company
          - home_location,work_location
          - home_location,work_location,company
          - home_location,work_location,manager
          - home_location,work_location,manager,company
          - home_location,work_location,manager,team
          - home_location,work_location,manager,team,company
          - home_location,work_location,team
          - home_location,work_location,team,company
          - manager
          - manager,company
          - manager,team
          - manager,team,company
          - team
          - team,company
          - work_location
          - work_location,company
          - work_location,manager
          - work_location,manager,company
          - work_location,manager,team
          - work_location,manager,team,company
          - work_location,team
          - work_location,team,company
          type: string
        style: form
      - description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
        explode: true
        in: query
        name: include_remote_data
        required: false
        schema:
          type: boolean
        style: form
      - description: Whether to include sensetive fields (such as social security
          numbers) in the response.
        explode: true
        in: query
        name: include_sensitive_fields
        required: false
        schema:
          type: boolean
        style: form
      - description: If provided, will only return employees for this manager.
        examples:
          ManagerId:
            summary: manager_id
        explode: true
        in: query
        name: manager_id
        required: false
        schema:
          type: string
        style: form
      - description: If provided, will only return objects modified after this datetime.
        explode: true
        in: query
        name: modified_after
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: If provided, will only return objects modified before this datetime.
        explode: true
        in: query
        name: modified_before
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: The API provider's ID for the given object.
        explode: true
        in: query
        name: remote_id
        required: false
        schema:
          description: The third-party API ID of the matching object.
          nullable: true
          type: string
        style: form
      - description: If provided, will only return employees for this team.
        examples:
          TeamId:
            summary: team_id
        explode: true
        in: query
        name: team_id
        required: false
        schema:
          type: string
        style: form
      - description: If provided, will only return employees for this location.
        examples:
          WorkLocationId:
            summary: work_location_id
        explode: true
        in: query
        name: work_location_id
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEmployeeList'
      security:
      - tokenAuth: []
      tags:
      - employees
      x-accepts: application/json
    post:
      description: Creates an `Employee` object with the given values.
      operationId: employees_create
      parameters:
      - description: Token identifying the end user.
        explode: false
        in: header
        name: X-Account-Token
        required: true
        schema:
          type: string
        style: simple
      - description: Whether or not third-party updates should be run asynchronously.
        explode: true
        in: query
        name: run_async
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmployeeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmployeeRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
      security:
      - tokenAuth: []
      tags:
      - employees
      x-contentType: application/json
      x-accepts: application/json
  /employees/{id}:
    get:
      description: Returns an `Employee` object with the given `id`.
      operationId: employees_retrieve
      parameters:
      - description: Token identifying the end user.
        explode: false
        in: header
        name: X-Account-Token
        required: true
        schema:
          type: string
        style: simple
      - description: Which relations should be returned in expanded form. Multiple
          relation names should be comma separated without spaces.
        examples:
          ExpandEmployments,HomeLocation,WorkLocation,Manager,Team,Company:
            summary: Expand Employments, Home_location, Work_location, Manager, Team,
              Company
            value: employments,home_location,work_location,manager,team,company
        explode: true
        in: query
        name: expand
        required: false
        schema:
          enum:
          - company
          - employments
          - employments,company
          - employments,home_location
          - employments,home_location,company
          - employments,home_location,manager
          - employments,home_location,manager,company
          - employments,home_location,manager,team
          - employments,home_location,manager,team,company
          - employments,home_location,team
          - employments,home_location,team,company
          - employments,home_location,work_location
          - employments,home_location,work_location,company
          - employments,home_location,work_location,manager
          - employments,home_location,work_location,manager,company
          - employments,home_location,work_location,manager,team
          - employments,home_location,work_location,manager,team,company
          - employments,home_location,work_location,team
          - employments,home_location,work_location,team,company
          - employments,manager
          - employments,manager,company
          - employments,manager,team
          - employments,manager,team,company
          - employments,team
          - employments,team,company
          - employments,work_location
          - employments,work_location,company
          - employments,work_location,manager
          - employments,work_location,manager,company
          - employments,work_location,manager,team
          - employments,work_location,manager,team,company
          - employments,work_location,team
          - employments,work_location,team,company
          - home_location
          - home_location,company
          - home_location,manager
          - home_location,manager,company
          - home_location,manager,team
          - home_location,manager,team,company
          - home_location,team
          - home_location,team,company
          - home_location,work_location
          - home_location,work_location,company
          - home_location,work_location,manager
          - home_location,work_location,manager,company
          - home_location,work_location,manager,team
          - home_location,work_location,manager,team,company
          - home_location,work_location,team
          - home_location,work_location,team,company
          - manager
          - manager,company
          - manager,team
          - manager,team,company
          - team
          - team,company
          - work_location
          - work_location,company
          - work_location,manager
          - work_location,manager,company
          - work_location,manager,team
          - work_location,manager,team,company
          - work_location,team
          - work_location,team,company
          type: string
        style: form
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
        explode: true
        in: query
        name: include_remote_data
        required: false
        schema:
          type: boolean
        style: form
      - description: Whether to include sensetive fields (such as social security
          numbers) in the response.
        explode: true
        in: query
        name: include_sensitive_fields
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
      security:
      - tokenAuth: []
      tags:
      - employees
      x-accepts: application/json
  /employments:
    get:
      description: Returns a list of `Employment` objects.
      operationId: employments_list
      parameters:
      - description: Token identifying the end user.
        explode: false
        in: header
        name: X-Account-Token
        required: true
        schema:
          type: string
        style: simple
      - description: If provided, will only return objects created after this datetime.
        explode: true
        in: query
        name: created_after
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: If provided, will only return objects created before this datetime.
        explode: true
        in: query
        name: created_before
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: The pagination cursor value.
        examples:
          CursorExample:
            summary: Cursor Example
            value: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: If provided, will only return employments for this employee.
        examples:
          EmployeeId:
            summary: employee_id
        explode: true
        in: query
        name: employee_id
        required: false
        schema:
          type: string
        style: form
      - description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
        explode: true
        in: query
        name: include_remote_data
        required: false
        schema:
          type: boolean
        style: form
      - description: If provided, will only return objects modified after this datetime.
        explode: true
        in: query
        name: modified_after
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: If provided, will only return objects modified before this datetime.
        explode: true
        in: query
        name: modified_before
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: The API provider's ID for the given object.
        explode: true
        in: query
        name: remote_id
        required: false
        schema:
          description: The third-party API ID of the matching object.
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEmploymentList'
      security:
      - tokenAuth: []
      tags:
      - employments
      x-accepts: application/json
    post:
      description: Creates an `Employment` object with the given values.
      operationId: employments_create
      parameters:
      - description: Token identifying the end user.
        explode: false
        in: header
        name: X-Account-Token
        required: true
        schema:
          type: string
        style: simple
      - description: Whether or not third-party updates should be run asynchronously.
        explode: true
        in: query
        name: run_async
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmploymentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmploymentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmploymentRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employment'
      security:
      - tokenAuth: []
      tags:
      - employments
      x-contentType: application/json
      x-accepts: application/json
  /employments/{id}:
    get:
      description: Returns an `Employment` object with the given `id`.
      operationId: employments_retrieve
      parameters:
      - description: Token identifying the end user.
        explode: false
        in: header
        name: X-Account-Token
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
        explode: true
        in: query
        name: include_remote_data
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employment'
      security:
      - tokenAuth: []
      tags:
      - employments
      x-accepts: application/json
  /generate-key:
    post:
      description: Create a remote key.
      operationId: generate_key_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateRemoteKeyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GenerateRemoteKeyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GenerateRemoteKeyRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteKey'
      security:
      - tokenAuth: []
      tags:
      - generate-key
      x-contentType: application/json
      x-accepts: application/json
  /link-token:
    post:
      description: Creates a link token to be used when linking a new end user.
      operationId: link_token_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EndUserDetailsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EndUserDetailsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EndUserDetailsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkToken'
      security:
      - tokenAuth: []
      tags:
      - link-token
      x-contentType: application/json
      x-accepts: application/json
  /locations:
    get:
      description: Returns a list of `Location` objects.
      operationId: locations_list
      parameters:
      - description: Token identifying the end user.
        explode: false
        in: header
        name: X-Account-Token
        required: true
        schema:
          type: string
        style: simple
      - description: If provided, will only return objects created after this datetime.
        explode: true
        in: query
        name: created_after
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: If provided, will only return objects created before this datetime.
        explode: true
        in: query
        name: created_before
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: The pagination cursor value.
        examples:
          CursorExample:
            summary: Cursor Example
            value: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
        explode: true
        in: query
        name: include_remote_data
        required: false
        schema:
          type: boolean
        style: form
      - description: If provided, will only return objects modified after this datetime.
        explode: true
        in: query
        name: modified_after
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: If provided, will only return objects modified before this datetime.
        explode: true
        in: query
        name: modified_before
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: The API provider's ID for the given object.
        explode: true
        in: query
        name: remote_id
        required: false
        schema:
          description: The third-party API ID of the matching object.
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLocationList'
      security:
      - tokenAuth: []
      tags:
      - locations
      x-accepts: application/json
  /locations/{id}:
    get:
      description: Returns a `Location` object with the given `id`.
      operationId: locations_retrieve
      parameters:
      - description: Token identifying the end user.
        explode: false
        in: header
        name: X-Account-Token
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
        explode: true
        in: query
        name: include_remote_data
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      security:
      - tokenAuth: []
      tags:
      - locations
      x-accepts: application/json
  /passthrough:
    post:
      description: Pull data from an endpoint not currently supported by Merge.
      operationId: passthrough_create
      parameters:
      - description: Token identifying the end user.
        explode: false
        in: header
        name: X-Account-Token
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataPassthroughRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DataPassthroughRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DataPassthroughRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteResponse'
      security:
      - tokenAuth: []
      tags:
      - passthrough
      x-contentType: application/json
      x-accepts: application/json
  /payroll-runs:
    get:
      description: Returns a list of `PayrollRun` objects.
      operationId: payroll_runs_list
      parameters:
      - description: Token identifying the end user.
        explode: false
        in: header
        name: X-Account-Token
        required: true
        schema:
          type: string
        style: simple
      - description: If provided, will only return objects created after this datetime.
        explode: true
        in: query
        name: created_after
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: If provided, will only return objects created before this datetime.
        explode: true
        in: query
        name: created_before
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: The pagination cursor value.
        examples:
          CursorExample:
            summary: Cursor Example
            value: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
        explode: true
        in: query
        name: include_remote_data
        required: false
        schema:
          type: boolean
        style: form
      - description: If provided, will only return objects modified after this datetime.
        explode: true
        in: query
        name: modified_after
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: If provided, will only return objects modified before this datetime.
        explode: true
        in: query
        name: modified_before
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: The API provider's ID for the given object.
        explode: true
        in: query
        name: remote_id
        required: false
        schema:
          description: The third-party API ID of the matching object.
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayrollRunList'
      security:
      - tokenAuth: []
      tags:
      - payroll-runs
      x-accepts: application/json
  /payroll-runs/{id}:
    get:
      description: Returns a `PayrollRun` object with the given `id`.
      operationId: payroll_runs_retrieve
      parameters:
      - description: Token identifying the end user.
        explode: false
        in: header
        name: X-Account-Token
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
        explode: true
        in: query
        name: include_remote_data
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayrollRun'
      security:
      - tokenAuth: []
      tags:
      - payroll-runs
      x-accepts: application/json
  /regenerate-key:
    post:
      description: Exchange remote keys.
      operationId: regenerate_key_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoteKeyForRegenerationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RemoteKeyForRegenerationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RemoteKeyForRegenerationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteKey'
      security:
      - tokenAuth: []
      tags:
      - regenerate-key
      x-contentType: application/json
      x-accepts: application/json
  /sync-status:
    get:
      description: Get syncing status.
      operationId: sync_status_list
      parameters:
      - description: Token identifying the end user.
        explode: false
        in: header
        name: X-Account-Token
        required: true
        schema:
          type: string
        style: simple
      - description: The pagination cursor value.
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSyncStatusList'
      security:
      - tokenAuth: []
      tags:
      - sync-status
      x-accepts: application/json
  /sync-status/resync:
    post:
      description: Force resync of all models.
      operationId: sync_status_resync_create
      parameters:
      - description: Token identifying the end user.
        explode: false
        in: header
        name: X-Account-Token
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncStatus'
      security:
      - tokenAuth: []
      tags:
      - sync-status
      x-accepts: application/json
  /teams:
    get:
      description: Returns a list of `Team` objects.
      operationId: teams_list
      parameters:
      - description: Token identifying the end user.
        explode: false
        in: header
        name: X-Account-Token
        required: true
        schema:
          type: string
        style: simple
      - description: If provided, will only return objects created after this datetime.
        explode: true
        in: query
        name: created_after
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: If provided, will only return objects created before this datetime.
        explode: true
        in: query
        name: created_before
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: The pagination cursor value.
        examples:
          CursorExample:
            summary: Cursor Example
            value: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
        explode: true
        in: query
        name: include_remote_data
        required: false
        schema:
          type: boolean
        style: form
      - description: If provided, will only return objects modified after this datetime.
        explode: true
        in: query
        name: modified_after
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: If provided, will only return objects modified before this datetime.
        explode: true
        in: query
        name: modified_before
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: The API provider's ID for the given object.
        explode: true
        in: query
        name: remote_id
        required: false
        schema:
          description: The third-party API ID of the matching object.
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTeamList'
      security:
      - tokenAuth: []
      tags:
      - teams
      x-accepts: application/json
  /teams/{id}:
    get:
      description: Returns a `Team` object with the given `id`.
      operationId: teams_retrieve
      parameters:
      - description: Token identifying the end user.
        explode: false
        in: header
        name: X-Account-Token
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
        explode: true
        in: query
        name: include_remote_data
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
      security:
      - tokenAuth: []
      tags:
      - teams
      x-accepts: application/json
  /time-off:
    get:
      description: Returns a list of `TimeOff` objects.
      operationId: time_off_list
      parameters:
      - description: Token identifying the end user.
        explode: false
        in: header
        name: X-Account-Token
        required: true
        schema:
          type: string
        style: simple
      - description: If provided, will only return time off for this approver.
        examples:
          ApproverId:
            summary: approver_id
        explode: true
        in: query
        name: approver_id
        required: false
        schema:
          type: string
        style: form
      - description: If provided, will only return objects created after this datetime.
        explode: true
        in: query
        name: created_after
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: If provided, will only return objects created before this datetime.
        explode: true
        in: query
        name: created_before
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: The pagination cursor value.
        examples:
          CursorExample:
            summary: Cursor Example
            value: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: If provided, will only return time off for this employee.
        examples:
          EmployeeId:
            summary: employee_id
        explode: true
        in: query
        name: employee_id
        required: false
        schema:
          type: string
        style: form
      - description: Which relations should be returned in expanded form. Multiple
          relation names should be comma separated without spaces.
        examples:
          ExpandEmployee,Approver:
            summary: Expand Employee, Approver
            value: employee,approver
        explode: true
        in: query
        name: expand
        required: false
        schema:
          enum:
          - approver
          - employee
          - employee,approver
          type: string
        style: form
      - description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
        explode: true
        in: query
        name: include_remote_data
        required: false
        schema:
          type: boolean
        style: form
      - description: If provided, will only return objects modified after this datetime.
        explode: true
        in: query
        name: modified_after
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: If provided, will only return objects modified before this datetime.
        explode: true
        in: query
        name: modified_before
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: The API provider's ID for the given object.
        explode: true
        in: query
        name: remote_id
        required: false
        schema:
          description: The third-party API ID of the matching object.
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTimeOffList'
      security:
      - tokenAuth: []
      tags:
      - time-off
      x-accepts: application/json
  /time-off-balance:
    get:
      description: Returns a list of `TimeOffBalance` objects.
      operationId: time_off_balance_list
      parameters:
      - description: Token identifying the end user.
        explode: false
        in: header
        name: X-Account-Token
        required: true
        schema:
          type: string
        style: simple
      - description: If provided, will only return objects created after this datetime.
        explode: true
        in: query
        name: created_after
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: If provided, will only return objects created before this datetime.
        explode: true
        in: query
        name: created_before
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: The pagination cursor value.
        examples:
          CursorExample:
            summary: Cursor Example
            value: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: If provided, will only return time off balances for this employee.
        examples:
          EmployeeId:
            summary: employee_id
        explode: true
        in: query
        name: employee_id
        required: false
        schema:
          type: string
        style: form
      - description: Which relations should be returned in expanded form. Multiple
          relation names should be comma separated without spaces.
        examples:
          ExpandEmployee:
            summary: Expand Employee
            value: employee
        explode: true
        in: query
        name: expand
        required: false
        schema:
          enum:
          - employee
          type: string
        style: form
      - description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
        explode: true
        in: query
        name: include_remote_data
        required: false
        schema:
          type: boolean
        style: form
      - description: If provided, will only return objects modified after this datetime.
        explode: true
        in: query
        name: modified_after
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: If provided, will only return objects modified before this datetime.
        explode: true
        in: query
        name: modified_before
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: The API provider's ID for the given object.
        explode: true
        in: query
        name: remote_id
        required: false
        schema:
          description: The third-party API ID of the matching object.
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTimeOffBalanceList'
      security:
      - tokenAuth: []
      tags:
      - time-off-balance
      x-accepts: application/json
  /time-off-balance/{id}:
    get:
      description: Returns an `TimeOffBalance` object with the given `id`.
      operationId: time_off_balance_retrieve
      parameters:
      - description: Token identifying the end user.
        explode: false
        in: header
        name: X-Account-Token
        required: true
        schema:
          type: string
        style: simple
      - description: Which relations should be returned in expanded form. Multiple
          relation names should be comma separated without spaces.
        examples:
          ExpandEmployee:
            summary: Expand Employee
            value: employee
        explode: true
        in: query
        name: expand
        required: false
        schema:
          enum:
          - employee
          type: string
        style: form
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
        explode: true
        in: query
        name: include_remote_data
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeOffBalance'
      security:
      - tokenAuth: []
      tags:
      - time-off-balance
      x-accepts: application/json
  /time-off/{id}:
    get:
      description: Returns an `TimeOff` object with the given `id`.
      operationId: time_off_retrieve
      parameters:
      - description: Token identifying the end user.
        explode: false
        in: header
        name: X-Account-Token
        required: true
        schema:
          type: string
        style: simple
      - description: Which relations should be returned in expanded form. Multiple
          relation names should be comma separated without spaces.
        examples:
          ExpandEmployee,Approver:
            summary: Expand Employee, Approver
            value: employee,approver
        explode: true
        in: query
        name: expand
        required: false
        schema:
          enum:
          - approver
          - employee
          - employee,approver
          type: string
        style: form
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
        explode: true
        in: query
        name: include_remote_data
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeOff'
      security:
      - tokenAuth: []
      tags:
      - time-off
      x-accepts: application/json
components:
  schemas:
    AccountIntegration:
      example:
        image: https://openapi-generator.tech
        color: color
        name: name
        square_image: https://openapi-generator.tech
        categories:
        - hris
        - hris
        slug: slug
      properties:
        name:
          description: Company name.
          type: string
        categories:
          description: 'Category or categories this integration belongs to. Multiple
            categories should be comma separated.<br/><br>Example: For [ats, hris],
            enter <i>ats,hris</i>'
          items:
            enum:
            - hris
            - ats
            - accounting
            type: string
          type: array
        image:
          description: Company logo in rectangular shape. <b>Upload an image with
            a clear background.</b>
          format: uri
          nullable: true
          type: string
        square_image:
          description: Company logo in square shape. <b>Upload an image with a white
            background.</b>
          format: uri
          nullable: true
          type: string
        color:
          description: The color of this integration used for buttons and text throughout
            the app and landing pages. <b>Choose a darker, saturated color.</b>
          maxLength: 18
          pattern: ^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$
          type: string
        slug:
          readOnly: true
          type: string
      required:
      - name
      type: object
    AccountToken:
      example:
        account_token: T9klMDQrcHdm9jrtHuOS2Nf06BIHwMNjpPXPMB
        integration:
          image: https://openapi-generator.tech
          color: color
          name: name
          square_image: https://openapi-generator.tech
          categories:
          - hris
          - hris
          slug: slug
      properties:
        account_token:
          example: T9klMDQrcHdm9jrtHuOS2Nf06BIHwMNjpPXPMB
          type: string
        integration:
          $ref: '#/components/schemas/AccountIntegration'
      required:
      - account_token
      - integration
      type: object
    AvailableActions:
      description: |-
        # The AvailableActions Object
        ### Description
        The `Activity` object is used to see all available model/operation combinations for an integration.

        ### Usage Example
        Fetch all the actions available for the `Zenefits` integration.
      example:
        available_model_operations:
        - model_name: Candidate
          available_operations:
          - FETCH
          - CREATE
          required_post_parameters:
          - remote_user_id
          supported_fields:
          - first_name
          - last_name
          - company
          - title
        integration:
          image: https://openapi-generator.tech
          color: color
          name: name
          square_image: https://openapi-generator.tech
          categories:
          - hris
          - hris
          slug: slug
        passthrough_available: true
      properties:
        integration:
          $ref: '#/components/schemas/AccountIntegration'
        passthrough_available:
          example: true
          type: boolean
        available_model_operations:
          example:
          - model_name: Candidate
            available_operations:
            - FETCH
            - CREATE
            required_post_parameters:
            - remote_user_id
            supported_fields:
            - first_name
            - last_name
            - company
            - title
          items:
            $ref: '#/components/schemas/ModelOperation'
          type: array
      required:
      - integration
      - passthrough_available
      type: object
    Benefit:
      description: |-
        # The Benefit Object
        ### Description
        The `Benefit` object is used to represent a Benefit for an employee.

        ### Usage Example
        Fetch from the `LIST Benefits` endpoint and filter by `ID` to show all benefits.
      example:
        employee_contribution: 23.65
        remote_id: "19202938"
        benefit_plan_type: MEDICAL
        company_contribution: 150.0
        id: 3fe5ae7a-f1ba-4529-b7af-84e86dc6d232
        employee: d2f972d0-2526-434b-9409-4c3b468e08f0
        provider_name: Blue Shield of California
        remote_data:
        - path: /benefits
          data:
          - Varies by platform
      properties:
        id:
          example: 3fe5ae7a-f1ba-4529-b7af-84e86dc6d232
          format: uuid
          readOnly: true
          type: string
        remote_id:
          description: The third-party API ID of the matching object.
          example: "19202938"
          nullable: true
          type: string
        employee:
          description: The employee on the plan.
          example: d2f972d0-2526-434b-9409-4c3b468e08f0
          format: uuid
          nullable: true
          type: string
        provider_name:
          description: The name of the benefit provider.
          example: Blue Shield of California
          nullable: true
          type: string
        benefit_plan_type:
          allOf:
          - $ref: '#/components/schemas/BenefitPlanTypeEnum'
          description: The type of benefit plan
          example: MEDICAL
          nullable: true
        employee_contribution:
          description: The employee's contribution.
          example: 23.65
          format: float
          nullable: true
          type: number
        company_contribution:
          description: The company's contribution.
          example: 150.0
          format: float
          nullable: true
          type: number
        remote_data:
          example:
          - path: /benefits
            data:
            - Varies by platform
          items:
            $ref: '#/components/schemas/RemoteData'
          nullable: true
          readOnly: true
          type: array
      type: object
    BenefitPlanTypeEnum:
      enum:
      - MEDICAL
      - DENTAL
      - VISION
      - HSA
      - FSA_MEDICAL
      - FSA_DEPENDENT_CARE
      - SIMPLE_IRA
      - _401K
      - ROTH_401K
      - OTHER_NON_TAXABLE
      - COMMUTER_TRANSIT
      - COMMUTER_PARKING
      - _401K_LOAN_PAYMENT
      - SHORT_DISABILITY
      - LONG_DISABILITY
      - LIFE
      - SEP_IRA
      - SARSEP
      - CUSTOM_TAXABLE
      - _403B
      - ROTH_403B
      - STUDENT_LOAN
      type: string
    Company:
      description: |-
        # The Company Object
        ### Description
        The `Company` object is used to represent a Company.

        ### Usage Example
        Fetch from the `LIST Companies` endpoint and filter by `ID` to show all companies.
      example:
        eins:
        - 12-3456789
        - 12-3451111
        - 11-0011000
        remote_id: "19202938"
        id: 1b998423-db0a-4037-a4cf-f79c60cb67b3
        legal_name: We Love Integrations Inc.
        display_name: We Love Integrations
        remote_data:
        - path: /companies
          data:
          - Varies by platform
      properties:
        id:
          example: 1b998423-db0a-4037-a4cf-f79c60cb67b3
          format: uuid
          readOnly: true
          type: string
        remote_id:
          description: The third-party API ID of the matching object.
          example: "19202938"
          nullable: true
          type: string
        legal_name:
          description: The company's legal name.
          example: We Love Integrations Inc.
          nullable: true
          type: string
        display_name:
          description: The company's display name.
          example: We Love Integrations
          nullable: true
          type: string
        eins:
          description: The company's Employer Identification Numbers.
          example:
          - 12-3456789
          - 12-3451111
          - 11-0011000
          items:
            nullable: true
            type: string
          nullable: true
          type: array
        remote_data:
          example:
          - path: /companies
            data:
            - Varies by platform
          items:
            $ref: '#/components/schemas/RemoteData'
          nullable: true
          readOnly: true
          type: array
      type: object
    CountryEnum:
      enum:
      - AF
      - AX
      - AL
      - DZ
      - AS
      - AD
      - AO
      - AI
      - AQ
      - AG
      - AR
      - AM
      - AW
      - AU
      - AT
      - AZ
      - BS
      - BH
      - BD
      - BB
      - BY
      - BE
      - BZ
      - BJ
      - BM
      - BT
      - BO
      - BQ
      - BA
      - BW
      - BV
      - BR
      - IO
      - BN
      - BG
      - BF
      - BI
      - CV
      - KH
      - CM
      - CA
      - KY
      - CF
      - TD
      - CL
      - CN
      - CX
      - CC
      - CO
      - KM
      - CG
      - CD
      - CK
      - CR
      - CI
      - HR
      - CU
      - CW
      - CY
      - CZ
      - DK
      - DJ
      - DM
      - DO
      - EC
      - EG
      - SV
      - GQ
      - ER
      - EE
      - SZ
      - ET
      - FK
      - FO
      - FJ
      - FI
      - FR
      - GF
      - PF
      - TF
      - GA
      - GM
      - GE
      - DE
      - GH
      - GI
      - GR
      - GL
      - GD
      - GP
      - GU
      - GT
      - GG
      - GN
      - GW
      - GY
      - HT
      - HM
      - VA
      - HN
      - HK
      - HU
      - IS
      - IN
      - ID
      - IR
      - IQ
      - IE
      - IM
      - IL
      - IT
      - JM
      - JP
      - JE
      - JO
      - KZ
      - KE
      - KI
      - KW
      - KG
      - LA
      - LV
      - LB
      - LS
      - LR
      - LY
      - LI
      - LT
      - LU
      - MO
      - MG
      - MW
      - MY
      - MV
      - ML
      - MT
      - MH
      - MQ
      - MR
      - MU
      - YT
      - MX
      - FM
      - MD
      - MC
      - MN
      - ME
      - MS
      - MA
      - MZ
      - MM
      - NA
      - NR
      - NP
      - NL
      - NC
      - NZ
      - NI
      - NE
      - NG
      - NU
      - NF
      - KP
      - MK
      - MP
      - "NO"
      - OM
      - PK
      - PW
      - PS
      - PA
      - PG
      - PY
      - PE
      - PH
      - PN
      - PL
      - PT
      - PR
      - QA
      - RE
      - RO
      - RU
      - RW
      - BL
      - SH
      - KN
      - LC
      - MF
      - PM
      - VC
      - WS
      - SM
      - ST
      - SA
      - SN
      - RS
      - SC
      - SL
      - SG
      - SX
      - SK
      - SI
      - SB
      - SO
      - ZA
      - GS
      - KR
      - SS
      - ES
      - LK
      - SD
      - SR
      - SJ
      - SE
      - CH
      - SY
      - TW
      - TJ
      - TZ
      - TH
      - TL
      - TG
      - TK
      - TO
      - TT
      - TN
      - TR
      - TM
      - TC
      - TV
      - UG
      - UA
      - AE
      - GB
      - UM
      - US
      - UY
      - UZ
      - VU
      - VE
      - VN
      - VG
      - VI
      - WF
      - EH
      - YE
      - ZM
      - ZW
      type: string
    DataPassthroughRequest:
      description: |-
        # The DataPassthrough Object
        ### Description
        The `DataPassthrough` object is used to send information to an otherwise-unsupported third-party endpoint.

        ### Usage Example
        Create a `DataPassthrough` to get team hierarchies from your Rippling integration.
      example:
        path: /scooters
        headers:
          EXTRA-HEADER: value
        method: POST
        data:
          scooters:
          - company: Lime
            model: Gen 2.5
          - company: Bird
            model: Bird Zero
        base_url_override: base_url_override
      properties:
        method:
          allOf:
          - $ref: '#/components/schemas/MethodEnum'
          example: POST
        path:
          example: /scooters
          type: string
        base_url_override:
          nullable: true
          type: string
        data:
          additionalProperties: {}
          example:
            scooters:
            - company: Lime
              model: Gen 2.5
            - company: Bird
              model: Bird Zero
          nullable: true
          type: object
        headers:
          additionalProperties: {}
          example:
            EXTRA-HEADER: value
          nullable: true
          type: object
      required:
      - method
      - path
      type: object
    Deduction:
      description: |-
        # The Deduction Object
        ### Description
        The `Deduction` object is used to represent a deduction for a given employee's payroll run. One run could include several deductions.

        ### Usage Example
        Fetch from the `LIST Deductions` endpoint and filter by `ID` to show all deductions.
      properties:
        id:
          example: 5fd439fc-1b64-4755-b275-64918936c365
          format: uuid
          readOnly: true
          type: string
        employee_payroll_run:
          description: The deduction's employee payroll run.
          example: 35347df1-95e7-46e2-93cc-66f1191edca5
          format: uuid
          nullable: true
          type: string
        name:
          description: The deduction's name.
          example: Social Security
          nullable: true
          type: string
        employee_deduction:
          description: The amount the employee is deducting.
          example: 34.54
          format: float
          nullable: true
          type: number
        company_deduction:
          description: The amount the company is deducting.
          example: 78.78
          format: float
          nullable: true
          type: number
        remote_data:
          example:
          - path: /payroll-deduction
            data:
            - Varies by platform
          items:
            additionalProperties: {}
            description: The full data pulled from the third-party API for an object.
            nullable: true
            type: object
          nullable: true
          type: array
      type: object
    Earning:
      description: |-
        # The Earning Object
        ### Description
        The `Earning` object is used to represent an earning for a given employee's payroll run. One run could include several earnings.

        ### Usage Example
        Fetch from the `LIST Earnings` endpoint and filter by `ID` to show all earnings.
      properties:
        id:
          example: babbced6-3a81-4775-8da2-490dc6385259
          format: uuid
          readOnly: true
          type: string
        employee_payroll_run:
          description: The earning's employee payroll run.
          example: 35347df1-95e7-46e2-93cc-66f1191edca5
          format: uuid
          nullable: true
          type: string
        amount:
          description: The amount earned.
          example: 1002.34
          format: float
          nullable: true
          type: number
        type:
          allOf:
          - $ref: '#/components/schemas/TypeEnum'
          description: The type of earning.
          example: SALARY
          nullable: true
        remote_data:
          example:
          - path: /payroll-earnings
            data:
            - Varies by platform
          items:
            additionalProperties: {}
            description: The full data pulled from the third-party API for an object.
            nullable: true
            type: object
          nullable: true
          type: array
      type: object
    Employee:
      description: |-
        # The Employee Object
        ### Description
        The `Employee` object is used to represent an Employee for a company.

        ### Usage Example
        Fetch from the `LIST Employee` endpoint and filter by `ID` to show all employees.
      example:
        display_full_name: Jane Doe
        work_email: jane@merge.dev
        gender: FEMALE
        ethnicity: AMERICAN_INDIAN_OR_ALASKA_NATIVE
        date_of_birth: 2000-01-23T04:56:07.000+00:00
        work_location: 9efbc633-3387-4306-aa55-e2c635e6bb4f
        ssn: "1234567890"
        company: 8d9fd929-436c-4fd4-a48b-0c61f68d6178
        home_location: d2f972d0-2526-434b-9409-4c3b468e08f0
        id: 0958cbc6-6040-430a-848e-aafacbadf4ae
        employment_status: ACTIVE
        first_name: Jane
        manager: 0048ea5b-911e-4dff-9364-92070dea62ff
        remote_id: "19202938"
        last_name: Doe
        employments:
        - 17a54124-287f-494d-965e-3c5b330c9a68
        team: 249c9faa-3045-4a31-953b-8f22d3613301
        hire_date: 2000-01-23T04:56:07.000+00:00
        avatar: http://alturl.com/h2h8m
        mobile_phone_number: +1234567890
        remote_data:
        - path: /people
          data:
          - Varies by platform
        marital_status: SINGLE
        termination_date: 2000-01-23T04:56:07.000+00:00
        employee_number: "2"
        personal_email: jane@gmail.com
      properties:
        id:
          example: 0958cbc6-6040-430a-848e-aafacbadf4ae
          format: uuid
          readOnly: true
          type: string
        remote_id:
          description: The third-party API ID of the matching object.
          example: "19202938"
          nullable: true
          type: string
        employee_number:
          description: 'The employee''s number that appears in the remote UI. Note:
            This is distinct from the remote_id field, which is a unique identifier
            for the employee set by the remote API, and is not exposed to the user.'
          example: "2"
          nullable: true
          type: string
        company:
          description: The ID of the employee's company.
          example: 8d9fd929-436c-4fd4-a48b-0c61f68d6178
          format: uuid
          nullable: true
          type: string
        first_name:
          description: The employee's first name.
          example: Jane
          nullable: true
          type: string
        last_name:
          description: The employee's last name.
          example: Doe
          nullable: true
          type: string
        display_full_name:
          description: The employee's full name, to use for display purposes.
          example: Jane Doe
          nullable: true
          type: string
        work_email:
          description: The employee's work email.
          example: jane@merge.dev
          format: email
          maxLength: 254
          nullable: true
          type: string
        personal_email:
          description: The employee's personal email.
          example: jane@gmail.com
          format: email
          maxLength: 254
          nullable: true
          type: string
        mobile_phone_number:
          description: The employee's mobile phone number.
          example: +1234567890
          nullable: true
          type: string
        employments:
          example:
          - 17a54124-287f-494d-965e-3c5b330c9a68
          items:
            format: uuid
            type: string
          readOnly: true
          type: array
        home_location:
          description: The employee's home address.
          example: d2f972d0-2526-434b-9409-4c3b468e08f0
          format: uuid
          nullable: true
          type: string
        work_location:
          description: The employee's work address.
          example: 9efbc633-3387-4306-aa55-e2c635e6bb4f
          format: uuid
          nullable: true
          type: string
        manager:
          description: The employee ID of the employee's manager.
          example: 0048ea5b-911e-4dff-9364-92070dea62ff
          format: uuid
          nullable: true
          type: string
        team:
          description: The employee's team.
          example: 249c9faa-3045-4a31-953b-8f22d3613301
          format: uuid
          nullable: true
          type: string
        ssn:
          description: The employee's social security number.
          example: "1234567890"
          maxLength: 100
          nullable: true
          type: string
        gender:
          allOf:
          - $ref: '#/components/schemas/GenderEnum'
          description: The employee's gender.
          example: FEMALE
          nullable: true
        ethnicity:
          allOf:
          - $ref: '#/components/schemas/EthnicityEnum'
          description: The employee's ethnicity.
          example: AMERICAN_INDIAN_OR_ALASKA_NATIVE
          nullable: true
        marital_status:
          allOf:
          - $ref: '#/components/schemas/MaritalStatusEnum'
          description: The employee's marital status.
          example: SINGLE
          nullable: true
        date_of_birth:
          description: The employee's date of birth.
          format: date-time
          nullable: true
          type: string
        hire_date:
          description: The employee's hire date. If an employee has multiple hire
            dates from previous employments, this represents the most recent hire
            date.
          format: date-time
          nullable: true
          type: string
        employment_status:
          allOf:
          - $ref: '#/components/schemas/EmploymentStatusEnum'
          description: The employment status of the employee.
          example: ACTIVE
          nullable: true
        termination_date:
          description: The employee's termination date.
          format: date-time
          nullable: true
          type: string
        avatar:
          description: The URL of the employee's avatar image.
          example: http://alturl.com/h2h8m
          format: uri
          maxLength: 2000
          nullable: true
          type: string
        remote_data:
          example:
          - path: /people
            data:
            - Varies by platform
          items:
            $ref: '#/components/schemas/RemoteData'
          nullable: true
          readOnly: true
          type: array
      type: object
    EmployeePayrollRun:
      description: |-
        # The EmployeePayrollRun Object
        ### Description
        The `EmployeePayrollRun` object is used to represent a payroll run for a specific employee.

        ### Usage Example
        Fetch from the `LIST EmployeePayrollRun` endpoint and filter by `ID` to show all employee payroll runs.
      example:
        end_date: 2000-01-23T04:56:07.000+00:00
        remote_id: "19202938"
        taxes:
        - employee_payroll_run: 35347df1-95e7-46e2-93cc-66f1191edca5
          name: California State Income Tax
          amount: 100.25
          employer_tax: "False"
        employee: d2f972d0-2526-434b-9409-4c3b468e08f0
        gross_pay: 1342.67
        deductions:
        - employee_payroll_run: 35347df1-95e7-46e2-93cc-66f1191edca5
          name: Social Security
          employee_deduction: 34.54
          company_deduction: 78.78
        payroll_run: 35347df1-95e7-46e2-93cc-66f1191edca5
        remote_data:
        - path: /employee-payroll
          data:
          - Varies by platform
        net_pay: 865.78
        earnings:
        - employee_payroll_run: 35347df1-95e7-46e2-93cc-66f1191edca5
          amount: 1002.34
          type: SALARY
        - employee_payroll_run: 35347df1-95e7-46e2-93cc-66f1191edca5
          amount: 8342.34
          type: OVERTIME
        check_date: 2000-01-23T04:56:07.000+00:00
        id: fb8c55b6-1cb8-4b4c-9fb6-17924231619d
        start_date: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          example: fb8c55b6-1cb8-4b4c-9fb6-17924231619d
          format: uuid
          readOnly: true
          type: string
        remote_id:
          description: The third-party API ID of the matching object.
          example: "19202938"
          nullable: true
          type: string
        employee:
          description: The employee whose payroll is being run.
          example: d2f972d0-2526-434b-9409-4c3b468e08f0
          format: uuid
          nullable: true
          type: string
        payroll_run:
          description: The payroll being run.
          example: 35347df1-95e7-46e2-93cc-66f1191edca5
          format: uuid
          nullable: true
          type: string
        gross_pay:
          description: The gross pay from the run.
          example: 1342.67
          format: float
          nullable: true
          type: number
        net_pay:
          description: The net pay from the run.
          example: 865.78
          format: float
          nullable: true
          type: number
        start_date:
          description: The day and time the payroll run started.
          format: date-time
          nullable: true
          type: string
        end_date:
          description: The day and time the payroll run ended.
          format: date-time
          nullable: true
          type: string
        check_date:
          description: The day and time the payroll run was checked.
          format: date-time
          nullable: true
          type: string
        earnings:
          example:
          - employee_payroll_run: 35347df1-95e7-46e2-93cc-66f1191edca5
            amount: 1002.34
            type: SALARY
          - employee_payroll_run: 35347df1-95e7-46e2-93cc-66f1191edca5
            amount: 8342.34
            type: OVERTIME
          items:
            $ref: '#/components/schemas/Earning'
          readOnly: true
          type: array
        deductions:
          example:
          - employee_payroll_run: 35347df1-95e7-46e2-93cc-66f1191edca5
            name: Social Security
            employee_deduction: 34.54
            company_deduction: 78.78
          items:
            $ref: '#/components/schemas/Deduction'
          readOnly: true
          type: array
        taxes:
          example:
          - employee_payroll_run: 35347df1-95e7-46e2-93cc-66f1191edca5
            name: California State Income Tax
            amount: 100.25
            employer_tax: "False"
          items:
            $ref: '#/components/schemas/Tax'
          readOnly: true
          type: array
        remote_data:
          example:
          - path: /employee-payroll
            data:
            - Varies by platform
          items:
            $ref: '#/components/schemas/RemoteData'
          nullable: true
          readOnly: true
          type: array
      type: object
    EmployeeRequest:
      description: |-
        # The Employee Object
        ### Description
        The `Employee` object is used to represent an Employee for a company.

        ### Usage Example
        Fetch from the `LIST Employee` endpoint and filter by `ID` to show all employees.
      example:
        display_full_name: Jane Doe
        work_email: jane@merge.dev
        manager: 0048ea5b-911e-4dff-9364-92070dea62ff
        gender: FEMALE
        ethnicity: AMERICAN_INDIAN_OR_ALASKA_NATIVE
        date_of_birth: 2000-01-23T04:56:07.000+00:00
        remote_id: "19202938"
        last_name: Doe
        team: 249c9faa-3045-4a31-953b-8f22d3613301
        hire_date: 2000-01-23T04:56:07.000+00:00
        avatar: http://alturl.com/h2h8m
        work_location: 9efbc633-3387-4306-aa55-e2c635e6bb4f
        mobile_phone_number: +1234567890
        ssn: "1234567890"
        marital_status: SINGLE
        termination_date: 2000-01-23T04:56:07.000+00:00
        employee_number: "2"
        company: 8d9fd929-436c-4fd4-a48b-0c61f68d6178
        home_location: d2f972d0-2526-434b-9409-4c3b468e08f0
        employment_status: ACTIVE
        first_name: Jane
        personal_email: jane@gmail.com
      properties:
        remote_id:
          description: The third-party API ID of the matching object.
          example: "19202938"
          nullable: true
          type: string
        employee_number:
          description: 'The employee''s number that appears in the remote UI. Note:
            This is distinct from the remote_id field, which is a unique identifier
            for the employee set by the remote API, and is not exposed to the user.'
          example: "2"
          nullable: true
          type: string
        company:
          description: The ID of the employee's company.
          example: 8d9fd929-436c-4fd4-a48b-0c61f68d6178
          format: uuid
          nullable: true
          type: string
        first_name:
          description: The employee's first name.
          example: Jane
          nullable: true
          type: string
        last_name:
          description: The employee's last name.
          example: Doe
          nullable: true
          type: string
        display_full_name:
          description: The employee's full name, to use for display purposes.
          example: Jane Doe
          nullable: true
          type: string
        work_email:
          description: The employee's work email.
          example: jane@merge.dev
          format: email
          maxLength: 254
          nullable: true
          type: string
        personal_email:
          description: The employee's personal email.
          example: jane@gmail.com
          format: email
          maxLength: 254
          nullable: true
          type: string
        mobile_phone_number:
          description: The employee's mobile phone number.
          example: +1234567890
          nullable: true
          type: string
        home_location:
          description: The employee's home address.
          example: d2f972d0-2526-434b-9409-4c3b468e08f0
          format: uuid
          nullable: true
          type: string
        work_location:
          description: The employee's work address.
          example: 9efbc633-3387-4306-aa55-e2c635e6bb4f
          format: uuid
          nullable: true
          type: string
        manager:
          description: The employee ID of the employee's manager.
          example: 0048ea5b-911e-4dff-9364-92070dea62ff
          format: uuid
          nullable: true
          type: string
        team:
          description: The employee's team.
          example: 249c9faa-3045-4a31-953b-8f22d3613301
          format: uuid
          nullable: true
          type: string
        ssn:
          description: The employee's social security number.
          example: "1234567890"
          maxLength: 100
          nullable: true
          type: string
        gender:
          allOf:
          - $ref: '#/components/schemas/GenderEnum'
          description: The employee's gender.
          example: FEMALE
          nullable: true
        ethnicity:
          allOf:
          - $ref: '#/components/schemas/EthnicityEnum'
          description: The employee's ethnicity.
          example: AMERICAN_INDIAN_OR_ALASKA_NATIVE
          nullable: true
        marital_status:
          allOf:
          - $ref: '#/components/schemas/MaritalStatusEnum'
          description: The employee's marital status.
          example: SINGLE
          nullable: true
        date_of_birth:
          description: The employee's date of birth.
          format: date-time
          nullable: true
          type: string
        hire_date:
          description: The employee's hire date. If an employee has multiple hire
            dates from previous employments, this represents the most recent hire
            date.
          format: date-time
          nullable: true
          type: string
        employment_status:
          allOf:
          - $ref: '#/components/schemas/EmploymentStatusEnum'
          description: The employment status of the employee.
          example: ACTIVE
          nullable: true
        termination_date:
          description: The employee's termination date.
          format: date-time
          nullable: true
          type: string
        avatar:
          description: The URL of the employee's avatar image.
          example: http://alturl.com/h2h8m
          format: uri
          maxLength: 2000
          nullable: true
          type: string
      type: object
    Employment:
      description: |-
        # The Employment Object
        ### Description
        The `Employment` object is used to represent an employment position at a company. These are associated with the employee filling the role.

        ### Usage Example
        Fetch from the `LIST Employments` endpoint and filter by `ID` to show all employees.
      example:
        employment_type: FULL TIME
        flsa_status: EXEMPT
        remote_id: "19202938"
        effective_date: 2000-01-23T04:56:07.000+00:00
        pay_period: YEAR
        pay_frequency: BIWEEKLY
        id: 65d8ffd0-211b-4ba4-b85a-fbe2ce220982
        job_title: Software Engineer
        pay_rate: 80000.00
        pay_currency: USD
        remote_data:
        - path: /jobs
          data:
          - Varies by platform
      properties:
        id:
          example: 65d8ffd0-211b-4ba4-b85a-fbe2ce220982
          format: uuid
          readOnly: true
          type: string
        remote_id:
          description: The third-party API ID of the matching object.
          example: "19202938"
          nullable: true
          type: string
        job_title:
          description: The position's title.
          example: Software Engineer
          nullable: true
          type: string
        pay_rate:
          description: The position's pay rate in dollars.
          example: 80000.00
          format: float
          nullable: true
          type: number
        pay_period:
          allOf:
          - $ref: '#/components/schemas/PayPeriodEnum'
          description: The time period this pay rate encompasses.
          example: YEAR
          nullable: true
        pay_frequency:
          allOf:
          - $ref: '#/components/schemas/PayFrequencyEnum'
          description: The position's pay frequency.
          example: BIWEEKLY
          nullable: true
        pay_currency:
          allOf:
          - $ref: '#/components/schemas/PayCurrencyEnum'
          description: The position's currency code.
          example: USD
          nullable: true
        flsa_status:
          allOf:
          - $ref: '#/components/schemas/FlsaStatusEnum'
          description: The position's FLSA status.
          example: EXEMPT
          nullable: true
        effective_date:
          description: The position's effective date.
          format: date-time
          nullable: true
          type: string
        employment_type:
          allOf:
          - $ref: '#/components/schemas/EmploymentTypeEnum'
          description: The position's type of employment.
          example: FULL TIME
          nullable: true
        remote_data:
          example:
          - path: /jobs
            data:
            - Varies by platform
          items:
            $ref: '#/components/schemas/RemoteData'
          nullable: true
          readOnly: true
          type: array
      type: object
    EmploymentRequest:
      description: |-
        # The Employment Object
        ### Description
        The `Employment` object is used to represent an employment position at a company. These are associated with the employee filling the role.

        ### Usage Example
        Fetch from the `LIST Employments` endpoint and filter by `ID` to show all employees.
      example:
        employment_type: FULL TIME
        flsa_status: EXEMPT
        remote_id: "19202938"
        effective_date: 2000-01-23T04:56:07.000+00:00
        pay_period: YEAR
        pay_frequency: BIWEEKLY
        job_title: Software Engineer
        pay_rate: 80000.00
        pay_currency: USD
      properties:
        remote_id:
          description: The third-party API ID of the matching object.
          example: "19202938"
          nullable: true
          type: string
        job_title:
          description: The position's title.
          example: Software Engineer
          nullable: true
          type: string
        pay_rate:
          description: The position's pay rate in dollars.
          example: 80000.00
          format: float
          nullable: true
          type: number
        pay_period:
          allOf:
          - $ref: '#/components/schemas/PayPeriodEnum'
          description: The time period this pay rate encompasses.
          example: YEAR
          nullable: true
        pay_frequency:
          allOf:
          - $ref: '#/components/schemas/PayFrequencyEnum'
          description: The position's pay frequency.
          example: BIWEEKLY
          nullable: true
        pay_currency:
          allOf:
          - $ref: '#/components/schemas/PayCurrencyEnum'
          description: The position's currency code.
          example: USD
          nullable: true
        flsa_status:
          allOf:
          - $ref: '#/components/schemas/FlsaStatusEnum'
          description: The position's FLSA status.
          example: EXEMPT
          nullable: true
        effective_date:
          description: The position's effective date.
          format: date-time
          nullable: true
          type: string
        employment_type:
          allOf:
          - $ref: '#/components/schemas/EmploymentTypeEnum'
          description: The position's type of employment.
          example: FULL TIME
          nullable: true
      type: object
    EmploymentStatusEnum:
      enum:
      - ACTIVE
      - PENDING
      - INACTIVE
      type: string
    EmploymentTypeEnum:
      enum:
      - FULL_TIME
      - PART_TIME
      - INTERN
      - CONTRACTOR
      - FREELANCE
      type: string
    EndUserDetailsRequest:
      example:
        end_user_organization_name: end_user_organization_name
        integration: integration
        end_user_email_address: end_user_email_address
        categories:
        - hris
        - hris
        end_user_origin_id: end_user_origin_id
      properties:
        end_user_email_address:
          type: string
        end_user_organization_name:
          type: string
        end_user_origin_id:
          type: string
        categories:
          items:
            enum:
            - hris
            - ats
            - accounting
            type: string
          type: array
        integration:
          nullable: true
          type: string
      required:
      - end_user_email_address
      - end_user_organization_name
      - end_user_origin_id
      type: object
    EthnicityEnum:
      enum:
      - AMERICAN_INDIAN_OR_ALASKA_NATIVE
      - ASIAN_OR_INDIAN_SUBCONTINENT
      - BLACK_OR_AFRICAN_AMERICAN
      - HISPANIC_OR_LATINO
      - NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER
      - TWO_OR_MORE_RACES
      - WHITE
      - PREFER_NOT_TO_DISCLOSE
      type: string
    FlsaStatusEnum:
      enum:
      - EXEMPT
      - SALARIED_NONEXEMPT
      - NONEXEMPT
      - OWNER
      type: string
    GenderEnum:
      enum:
      - MALE
      - FEMALE
      - NON-BINARY
      - OTHER
      - PREFER_NOT_TO_DISCLOSE
      type: string
    GenerateRemoteKeyRequest:
      description: |-
        # The GenerateRemoteKey Object
        ### Description
        The `GenerateRemoteKey` object is used to represent a request for a new remote key.

        ### Usage Example
        Post a `GenerateRemoteKey` to create a new remote key.
      example:
        name: Remote Deployment Key 1
      properties:
        name:
          example: Remote Deployment Key 1
          type: string
      required:
      - name
      type: object
    LinkToken:
      example:
        integration_name: Lever
        link_token: necdP7FtdASl1fQwm62be2_dM4wBG8_GactqoUV0
      properties:
        link_token:
          example: necdP7FtdASl1fQwm62be2_dM4wBG8_GactqoUV0
          type: string
        integration_name:
          example: Lever
          type: string
      required:
      - integration_name
      - link_token
      type: object
    Location:
      description: |-
        # The Location Object
        ### Description
        The `Location` object is used to represent a Location for a Company or Employee address. This is shared across many models and is referenced whenever a location is stored.

        ### Usage Example
        Fetch from the `LIST Locations` endpoint and filter by `ID` to show all office locations.
      example:
        country: USA
        street_1: 2920 Broadway
        city: 'New York '
        remote_id: "93018402"
        street_2: 2nd Floor
        phone_number: +1111111111
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        state: NY
        zip_code: "10027"
        remote_data:
        - path: /locations
          data:
          - Varies by platform
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        remote_id:
          description: The third-party API ID of the matching object.
          example: "93018402"
          nullable: true
          type: string
        phone_number:
          description: The location's phone number.
          example: +1111111111
          nullable: true
          type: string
        street_1:
          description: Line 1 of the location's street address.
          example: 2920 Broadway
          nullable: true
          type: string
        street_2:
          description: Line 2 of the location's street address.
          example: 2nd Floor
          nullable: true
          type: string
        city:
          description: The location's city.
          example: 'New York '
          nullable: true
          type: string
        state:
          description: The location's state. Represents a region if outside of the
            US.
          example: NY
          nullable: true
          type: string
        zip_code:
          description: The location's zip code.
          example: "10027"
          nullable: true
          type: string
        country:
          allOf:
          - $ref: '#/components/schemas/CountryEnum'
          description: The location's country.
          example: USA
          nullable: true
        remote_data:
          example:
          - path: /locations
            data:
            - Varies by platform
          items:
            $ref: '#/components/schemas/RemoteData'
          nullable: true
          readOnly: true
          type: array
      type: object
    MaritalStatusEnum:
      enum:
      - SINGLE
      - MARRIED_FILING_JOINTLY
      - MARRIED_FILING_SEPARATELY
      - HEAD_OF_HOUSEHOLD
      - QUALIFYING_WIDOW_OR_WIDOWER_WITH_DEPENDENT_CHILD
      type: string
    MethodEnum:
      enum:
      - GET
      - OPTIONS
      - HEAD
      - POST
      - PUT
      - PATCH
      - DELETE
      type: string
    ModelOperation:
      description: |-
        # The ModelOperation Object
        ### Description
        The `ModelOperation` object is used to represent the operations that are currently supported for a given model.

        ### Usage Example
        View what operations are supported for the `Candidate` endpoint.
      properties:
        model_name:
          example: Candidate
          type: string
        available_operations:
          example:
          - FETCH
          - CREATE
          items:
            type: string
          type: array
        required_post_parameters:
          example:
          - remote_user_id
          items:
            type: string
          type: array
        supported_fields:
          example:
          - first_name
          - last_name
          - company
          - title
          items:
            type: string
          type: array
      required:
      - available_operations
      - model_name
      - required_post_parameters
      - supported_fields
      type: object
    PaginatedBenefitList:
      example:
        next: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
        previous: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
        results:
        - employee_contribution: 23.65
          remote_id: "19202938"
          benefit_plan_type: MEDICAL
          company_contribution: 150.0
          id: 3fe5ae7a-f1ba-4529-b7af-84e86dc6d232
          employee: d2f972d0-2526-434b-9409-4c3b468e08f0
          provider_name: Blue Shield of California
          remote_data:
          - path: /benefits
            data:
            - Varies by platform
        - employee_contribution: 23.65
          remote_id: "19202938"
          benefit_plan_type: MEDICAL
          company_contribution: 150.0
          id: 3fe5ae7a-f1ba-4529-b7af-84e86dc6d232
          employee: d2f972d0-2526-434b-9409-4c3b468e08f0
          provider_name: Blue Shield of California
          remote_data:
          - path: /benefits
            data:
            - Varies by platform
      properties:
        next:
          example: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
          nullable: true
          type: string
        previous:
          example: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/Benefit'
          type: array
      type: object
    PaginatedCompanyList:
      example:
        next: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
        previous: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
        results:
        - eins:
          - 12-3456789
          - 12-3451111
          - 11-0011000
          remote_id: "19202938"
          id: 1b998423-db0a-4037-a4cf-f79c60cb67b3
          legal_name: We Love Integrations Inc.
          display_name: We Love Integrations
          remote_data:
          - path: /companies
            data:
            - Varies by platform
        - eins:
          - 12-3456789
          - 12-3451111
          - 11-0011000
          remote_id: "19202938"
          id: 1b998423-db0a-4037-a4cf-f79c60cb67b3
          legal_name: We Love Integrations Inc.
          display_name: We Love Integrations
          remote_data:
          - path: /companies
            data:
            - Varies by platform
      properties:
        next:
          example: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
          nullable: true
          type: string
        previous:
          example: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/Company'
          type: array
      type: object
    PaginatedEmployeeList:
      example:
        next: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
        previous: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
        results:
        - display_full_name: Jane Doe
          work_email: jane@merge.dev
          gender: FEMALE
          ethnicity: AMERICAN_INDIAN_OR_ALASKA_NATIVE
          date_of_birth: 2000-01-23T04:56:07.000+00:00
          work_location: 9efbc633-3387-4306-aa55-e2c635e6bb4f
          ssn: "1234567890"
          company: 8d9fd929-436c-4fd4-a48b-0c61f68d6178
          home_location: d2f972d0-2526-434b-9409-4c3b468e08f0
          id: 0958cbc6-6040-430a-848e-aafacbadf4ae
          employment_status: ACTIVE
          first_name: Jane
          manager: 0048ea5b-911e-4dff-9364-92070dea62ff
          remote_id: "19202938"
          last_name: Doe
          employments:
          - 17a54124-287f-494d-965e-3c5b330c9a68
          team: 249c9faa-3045-4a31-953b-8f22d3613301
          hire_date: 2000-01-23T04:56:07.000+00:00
          avatar: http://alturl.com/h2h8m
          mobile_phone_number: +1234567890
          remote_data:
          - path: /people
            data:
            - Varies by platform
          marital_status: SINGLE
          termination_date: 2000-01-23T04:56:07.000+00:00
          employee_number: "2"
          personal_email: jane@gmail.com
        - display_full_name: Jane Doe
          work_email: jane@merge.dev
          gender: FEMALE
          ethnicity: AMERICAN_INDIAN_OR_ALASKA_NATIVE
          date_of_birth: 2000-01-23T04:56:07.000+00:00
          work_location: 9efbc633-3387-4306-aa55-e2c635e6bb4f
          ssn: "1234567890"
          company: 8d9fd929-436c-4fd4-a48b-0c61f68d6178
          home_location: d2f972d0-2526-434b-9409-4c3b468e08f0
          id: 0958cbc6-6040-430a-848e-aafacbadf4ae
          employment_status: ACTIVE
          first_name: Jane
          manager: 0048ea5b-911e-4dff-9364-92070dea62ff
          remote_id: "19202938"
          last_name: Doe
          employments:
          - 17a54124-287f-494d-965e-3c5b330c9a68
          team: 249c9faa-3045-4a31-953b-8f22d3613301
          hire_date: 2000-01-23T04:56:07.000+00:00
          avatar: http://alturl.com/h2h8m
          mobile_phone_number: +1234567890
          remote_data:
          - path: /people
            data:
            - Varies by platform
          marital_status: SINGLE
          termination_date: 2000-01-23T04:56:07.000+00:00
          employee_number: "2"
          personal_email: jane@gmail.com
      properties:
        next:
          example: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
          nullable: true
          type: string
        previous:
          example: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/Employee'
          type: array
      type: object
    PaginatedEmployeePayrollRunList:
      example:
        next: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
        previous: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
        results:
        - end_date: 2000-01-23T04:56:07.000+00:00
          remote_id: "19202938"
          taxes:
          - employee_payroll_run: 35347df1-95e7-46e2-93cc-66f1191edca5
            name: California State Income Tax
            amount: 100.25
            employer_tax: "False"
          employee: d2f972d0-2526-434b-9409-4c3b468e08f0
          gross_pay: 1342.67
          deductions:
          - employee_payroll_run: 35347df1-95e7-46e2-93cc-66f1191edca5
            name: Social Security
            employee_deduction: 34.54
            company_deduction: 78.78
          payroll_run: 35347df1-95e7-46e2-93cc-66f1191edca5
          remote_data:
          - path: /employee-payroll
            data:
            - Varies by platform
          net_pay: 865.78
          earnings:
          - employee_payroll_run: 35347df1-95e7-46e2-93cc-66f1191edca5
            amount: 1002.34
            type: SALARY
          - employee_payroll_run: 35347df1-95e7-46e2-93cc-66f1191edca5
            amount: 8342.34
            type: OVERTIME
          check_date: 2000-01-23T04:56:07.000+00:00
          id: fb8c55b6-1cb8-4b4c-9fb6-17924231619d
          start_date: 2000-01-23T04:56:07.000+00:00
        - end_date: 2000-01-23T04:56:07.000+00:00
          remote_id: "19202938"
          taxes:
          - employee_payroll_run: 35347df1-95e7-46e2-93cc-66f1191edca5
            name: California State Income Tax
            amount: 100.25
            employer_tax: "False"
          employee: d2f972d0-2526-434b-9409-4c3b468e08f0
          gross_pay: 1342.67
          deductions:
          - employee_payroll_run: 35347df1-95e7-46e2-93cc-66f1191edca5
            name: Social Security
            employee_deduction: 34.54
            company_deduction: 78.78
          payroll_run: 35347df1-95e7-46e2-93cc-66f1191edca5
          remote_data:
          - path: /employee-payroll
            data:
            - Varies by platform
          net_pay: 865.78
          earnings:
          - employee_payroll_run: 35347df1-95e7-46e2-93cc-66f1191edca5
            amount: 1002.34
            type: SALARY
          - employee_payroll_run: 35347df1-95e7-46e2-93cc-66f1191edca5
            amount: 8342.34
            type: OVERTIME
          check_date: 2000-01-23T04:56:07.000+00:00
          id: fb8c55b6-1cb8-4b4c-9fb6-17924231619d
          start_date: 2000-01-23T04:56:07.000+00:00
      properties:
        next:
          example: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
          nullable: true
          type: string
        previous:
          example: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/EmployeePayrollRun'
          type: array
      type: object
    PaginatedEmploymentList:
      example:
        next: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
        previous: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
        results:
        - employment_type: FULL TIME
          flsa_status: EXEMPT
          remote_id: "19202938"
          effective_date: 2000-01-23T04:56:07.000+00:00
          pay_period: YEAR
          pay_frequency: BIWEEKLY
          id: 65d8ffd0-211b-4ba4-b85a-fbe2ce220982
          job_title: Software Engineer
          pay_rate: 80000.00
          pay_currency: USD
          remote_data:
          - path: /jobs
            data:
            - Varies by platform
        - employment_type: FULL TIME
          flsa_status: EXEMPT
          remote_id: "19202938"
          effective_date: 2000-01-23T04:56:07.000+00:00
          pay_period: YEAR
          pay_frequency: BIWEEKLY
          id: 65d8ffd0-211b-4ba4-b85a-fbe2ce220982
          job_title: Software Engineer
          pay_rate: 80000.00
          pay_currency: USD
          remote_data:
          - path: /jobs
            data:
            - Varies by platform
      properties:
        next:
          example: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
          nullable: true
          type: string
        previous:
          example: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/Employment'
          type: array
      type: object
    PaginatedLocationList:
      example:
        next: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
        previous: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
        results:
        - country: USA
          street_1: 2920 Broadway
          city: 'New York '
          remote_id: "93018402"
          street_2: 2nd Floor
          phone_number: +1111111111
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: NY
          zip_code: "10027"
          remote_data:
          - path: /locations
            data:
            - Varies by platform
        - country: USA
          street_1: 2920 Broadway
          city: 'New York '
          remote_id: "93018402"
          street_2: 2nd Floor
          phone_number: +1111111111
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: NY
          zip_code: "10027"
          remote_data:
          - path: /locations
            data:
            - Varies by platform
      properties:
        next:
          example: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
          nullable: true
          type: string
        previous:
          example: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/Location'
          type: array
      type: object
    PaginatedPayrollRunList:
      example:
        next: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
        previous: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
        results:
        - end_date: 2000-01-23T04:56:07.000+00:00
          check_date: 2000-01-23T04:56:07.000+00:00
          remote_id: "19202938"
          run_state: PAID
          id: 37336947-b3d4-4a4c-a310-ab6ab510e079
          run_type: REGULAR
          start_date: 2000-01-23T04:56:07.000+00:00
          remote_data:
          - path: /payroll
            data:
            - Varies by platform
        - end_date: 2000-01-23T04:56:07.000+00:00
          check_date: 2000-01-23T04:56:07.000+00:00
          remote_id: "19202938"
          run_state: PAID
          id: 37336947-b3d4-4a4c-a310-ab6ab510e079
          run_type: REGULAR
          start_date: 2000-01-23T04:56:07.000+00:00
          remote_data:
          - path: /payroll
            data:
            - Varies by platform
      properties:
        next:
          example: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
          nullable: true
          type: string
        previous:
          example: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/PayrollRun'
          type: array
      type: object
    PaginatedSyncStatusList:
      example:
        next: next
        previous: previous
        results:
        - next_sync_start: 2021-03-30T20:44:18.662942Z
          model_name: Candidate
          model_id: ats.Candidate
          last_sync_start: 2021-03-30T19:44:18.695973Z
          is_initial_sync: true
          status: SYNCING
        - next_sync_start: 2021-03-30T20:44:18.662942Z
          model_name: Candidate
          model_id: ats.Candidate
          last_sync_start: 2021-03-30T19:44:18.695973Z
          is_initial_sync: true
          status: SYNCING
      properties:
        next:
          nullable: true
          type: string
        previous:
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/SyncStatus'
          type: array
      type: object
    PaginatedTeamList:
      example:
        next: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
        previous: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
        results:
        - remote_id: "19202938"
          name: Engineering
          id: 13a72919-9fae-4f54-81ca-ddfd8712a1ba
          remote_data:
          - path: /teams
            data:
            - Varies by platform
        - remote_id: "19202938"
          name: Engineering
          id: 13a72919-9fae-4f54-81ca-ddfd8712a1ba
          remote_data:
          - path: /teams
            data:
            - Varies by platform
      properties:
        next:
          example: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
          nullable: true
          type: string
        previous:
          example: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/Team'
          type: array
      type: object
    PaginatedTimeOffBalanceList:
      example:
        next: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
        previous: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
        results:
        - balance: 60.0
          remote_id: "19202938"
          id: 91b2b905-e866-40c8-8be2-efe53827a0aa
          used: 45.0
          employee: d2f972d0-2526-434b-9409-4c3b468e08f0
          remote_data:
          - path: /leave
            data:
            - Varies by platform
        - balance: 60.0
          remote_id: "19202938"
          id: 91b2b905-e866-40c8-8be2-efe53827a0aa
          used: 45.0
          employee: d2f972d0-2526-434b-9409-4c3b468e08f0
          remote_data:
          - path: /leave
            data:
            - Varies by platform
      properties:
        next:
          example: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
          nullable: true
          type: string
        previous:
          example: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/TimeOffBalance'
          type: array
      type: object
    PaginatedTimeOffList:
      example:
        next: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
        previous: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
        results:
        - approver: 9efbc633-3387-4306-aa55-e2c635e6bb4f
          start_time: 2000-01-23T04:56:07.000+00:00
          amount: 13
          request_type: VACATION
          employee_note: Trip to Iowa. Miss those cornfields!
          remote_id: "19202938"
          end_time: 2000-01-23T04:56:07.000+00:00
          id: 91b2b905-e866-40c8-8be2-efe53827a0aa
          units: DAYS
          employee: d2f972d0-2526-434b-9409-4c3b468e08f0
          status: APPROVED
          remote_data:
          - path: /leave
            data:
            - Varies by platform
        - approver: 9efbc633-3387-4306-aa55-e2c635e6bb4f
          start_time: 2000-01-23T04:56:07.000+00:00
          amount: 13
          request_type: VACATION
          employee_note: Trip to Iowa. Miss those cornfields!
          remote_id: "19202938"
          end_time: 2000-01-23T04:56:07.000+00:00
          id: 91b2b905-e866-40c8-8be2-efe53827a0aa
          units: DAYS
          employee: d2f972d0-2526-434b-9409-4c3b468e08f0
          status: APPROVED
          remote_data:
          - path: /leave
            data:
            - Varies by platform
      properties:
        next:
          example: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
          nullable: true
          type: string
        previous:
          example: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/TimeOff'
          type: array
      type: object
    PayCurrencyEnum:
      enum:
      - XUA
      - AFN
      - AFA
      - ALL
      - ALK
      - DZD
      - ADP
      - AOA
      - AOK
      - AON
      - AOR
      - ARA
      - ARS
      - ARM
      - ARP
      - ARL
      - AMD
      - AWG
      - AUD
      - ATS
      - AZN
      - AZM
      - BSD
      - BHD
      - BDT
      - BBD
      - BYN
      - BYB
      - BYR
      - BEF
      - BEC
      - BEL
      - BZD
      - BMD
      - BTN
      - BOB
      - BOL
      - BOV
      - BOP
      - BAM
      - BAD
      - BAN
      - BWP
      - BRC
      - BRZ
      - BRE
      - BRR
      - BRN
      - BRB
      - BRL
      - GBP
      - BND
      - BGL
      - BGN
      - BGO
      - BGM
      - BUK
      - BIF
      - XPF
      - KHR
      - CAD
      - CVE
      - KYD
      - XAF
      - CLE
      - CLP
      - CLF
      - CNX
      - CNY
      - CNH
      - COP
      - COU
      - KMF
      - CDF
      - CRC
      - HRD
      - HRK
      - CUC
      - CUP
      - CYP
      - CZK
      - CSK
      - DKK
      - DJF
      - DOP
      - NLG
      - XCD
      - DDM
      - ECS
      - ECV
      - EGP
      - GQE
      - ERN
      - EEK
      - ETB
      - EUR
      - XBA
      - XEU
      - XBB
      - XBC
      - XBD
      - FKP
      - FJD
      - FIM
      - FRF
      - XFO
      - XFU
      - GMD
      - GEK
      - GEL
      - DEM
      - GHS
      - GHC
      - GIP
      - XAU
      - GRD
      - GTQ
      - GWP
      - GNF
      - GNS
      - GYD
      - HTG
      - HNL
      - HKD
      - HUF
      - IMP
      - ISK
      - ISJ
      - INR
      - IDR
      - IRR
      - IQD
      - IEP
      - ILS
      - ILP
      - ILR
      - ITL
      - JMD
      - JPY
      - JOD
      - KZT
      - KES
      - KWD
      - KGS
      - LAK
      - LVL
      - LVR
      - LBP
      - LSL
      - LRD
      - LYD
      - LTL
      - LTT
      - LUL
      - LUC
      - LUF
      - MOP
      - MKD
      - MKN
      - MGA
      - MGF
      - MWK
      - MYR
      - MVR
      - MVP
      - MLF
      - MTL
      - MTP
      - MRU
      - MRO
      - MUR
      - MXV
      - MXN
      - MXP
      - MDC
      - MDL
      - MCF
      - MNT
      - MAD
      - MAF
      - MZE
      - MZN
      - MZM
      - MMK
      - NAD
      - NPR
      - ANG
      - TWD
      - NZD
      - NIO
      - NIC
      - NGN
      - KPW
      - NOK
      - OMR
      - PKR
      - XPD
      - PAB
      - PGK
      - PYG
      - PEI
      - PEN
      - PES
      - PHP
      - XPT
      - PLN
      - PLZ
      - PTE
      - GWE
      - QAR
      - XRE
      - RHD
      - RON
      - ROL
      - RUB
      - RUR
      - RWF
      - SVC
      - WST
      - SAR
      - RSD
      - CSD
      - SCR
      - SLL
      - XAG
      - SGD
      - SKK
      - SIT
      - SBD
      - SOS
      - ZAR
      - ZAL
      - KRH
      - KRW
      - KRO
      - SSP
      - SUR
      - ESP
      - ESA
      - ESB
      - XDR
      - LKR
      - SHP
      - XSU
      - SDD
      - SDG
      - SDP
      - SRD
      - SRG
      - SZL
      - SEK
      - CHF
      - SYP
      - STN
      - STD
      - TVD
      - TJR
      - TJS
      - TZS
      - XTS
      - THB
      - XXX
      - TPE
      - TOP
      - TTD
      - TND
      - TRY
      - TRL
      - TMT
      - TMM
      - USD
      - USN
      - USS
      - UGX
      - UGS
      - UAH
      - UAK
      - AED
      - UYW
      - UYU
      - UYP
      - UYI
      - UZS
      - VUV
      - VES
      - VEB
      - VEF
      - VND
      - VNN
      - CHE
      - CHW
      - XOF
      - YDD
      - YER
      - YUN
      - YUD
      - YUM
      - YUR
      - ZWN
      - ZRN
      - ZRZ
      - ZMW
      - ZMK
      - ZWD
      - ZWR
      - ZWL
      type: string
    PayFrequencyEnum:
      enum:
      - WEEKLY
      - BIWEEKLY
      - MONTHLY
      - QUARTERLY
      - SEMIANNUALLY
      - ANNUALLY
      - THIRTEEN-MONTHLY
      - PRO_RATA
      - "NULL"
      type: string
    PayPeriodEnum:
      enum:
      - HOUR
      - DAY
      - WEEK
      - EVERY_TWO_WEEKS
      - MONTH
      - QUARTER
      - EVERY_SIX_MONTHS
      - YEAR
      type: string
    PayrollRun:
      description: |-
        # The PayrollRun Object
        ### Description
        The `PayrollRun` object is used to represent a payroll run.

        ### Usage Example
        Fetch from the `LIST PayrollRuns` endpoint and filter by `ID` to show all payroll runs.
      example:
        end_date: 2000-01-23T04:56:07.000+00:00
        check_date: 2000-01-23T04:56:07.000+00:00
        remote_id: "19202938"
        run_state: PAID
        id: 37336947-b3d4-4a4c-a310-ab6ab510e079
        run_type: REGULAR
        start_date: 2000-01-23T04:56:07.000+00:00
        remote_data:
        - path: /payroll
          data:
          - Varies by platform
      properties:
        id:
          example: 37336947-b3d4-4a4c-a310-ab6ab510e079
          format: uuid
          readOnly: true
          type: string
        remote_id:
          description: The third-party API ID of the matching object.
          example: "19202938"
          nullable: true
          type: string
        run_state:
          allOf:
          - $ref: '#/components/schemas/RunStateEnum'
          description: The state of the payroll run
          example: PAID
          nullable: true
        run_type:
          allOf:
          - $ref: '#/components/schemas/RunTypeEnum'
          description: The type of the payroll run
          example: REGULAR
          nullable: true
        start_date:
          description: The day and time the payroll run started.
          format: date-time
          nullable: true
          type: string
        end_date:
          description: The day and time the payroll run ended.
          format: date-time
          nullable: true
          type: string
        check_date:
          description: The day and time the payroll run was checked.
          format: date-time
          nullable: true
          type: string
        remote_data:
          example:
          - path: /payroll
            data:
            - Varies by platform
          items:
            $ref: '#/components/schemas/RemoteData'
          nullable: true
          readOnly: true
          type: array
      type: object
    RemoteData:
      properties:
        path:
          type: string
        data:
          additionalProperties: {}
          type: object
      required:
      - path
      type: object
    RemoteDataRequest:
      properties:
        path:
          type: string
        data:
          additionalProperties: {}
          type: object
      required:
      - path
      type: object
    RemoteKey:
      description: |-
        # The RemoteKey Object
        ### Description
        The `RemoteKey` object is used to represent a request for a new remote key.

        ### Usage Example
        Post a `GenerateRemoteKey` to receive a new `RemoteKey`.
      example:
        name: Remote Deployment Key 1
        key: hXY57W0g0WkdRHjCaPvwijK63fwfN-o_Wh7f30SLTq_uPCOLo-WFcA
      properties:
        name:
          example: Remote Deployment Key 1
          type: string
        key:
          example: hXY57W0g0WkdRHjCaPvwijK63fwfN-o_Wh7f30SLTq_uPCOLo-WFcA
          type: string
      required:
      - key
      - name
      type: object
    RemoteKeyForRegenerationRequest:
      description: |-
        # The RemoteKeyForRegeneration Object
        ### Description
        The `RemoteKeyForRegeneration` object is used to exchange an old remote key for a new one

        ### Usage Example
        Post a `RemoteKeyForRegeneration` to swap out an old remote key for a new one
      example:
        name: Remote Deployment Key 1
      properties:
        name:
          example: Remote Deployment Key 1
          type: string
      required:
      - name
      type: object
    RemoteResponse:
      description: |-
        # The RemoteResponse Object
        ### Description
        The `RemoteResponse` object is used to represent information returned from a third-party endpoint.

        ### Usage Example
        View the `RemoteResponse` returned from your `DataPassthrough`.
      example:
        path: /scooters
        headers:
          EXTRA-HEADER: value
          Authorization: <redacted>
        method: GET
        response:
          scooters:
          - company: Lime
            model: Gen 2.5
          - company: Bird
            model: Bird Zero
        status: 200
      properties:
        method:
          example: GET
          type: string
        path:
          example: /scooters
          type: string
        status:
          example: 200
          type: integer
        response:
          additionalProperties: {}
          example:
            scooters:
            - company: Lime
              model: Gen 2.5
            - company: Bird
              model: Bird Zero
          type: object
        headers:
          additionalProperties: {}
          example:
            EXTRA-HEADER: value
            Authorization: <redacted>
          type: object
      required:
      - method
      - path
      - response
      - status
      type: object
    RequestTypeEnum:
      enum:
      - VACATION
      - SICK
      - PERSONAL
      - JURY_DUTY
      type: string
    RunStateEnum:
      enum:
      - PAID
      - DRAFT
      - APPROVED
      - FAILED
      - CLOSED
      type: string
    RunTypeEnum:
      enum:
      - INIT
      - REGULAR
      - OFF_CYCLE
      - CORRECTION
      - TERMINATION
      - RECONCILIATION
      - NEW_HIRE
      - POP
      - TRANSITION
      - CORRECTION_DISPLAY
      - EXCESS_HOURS
      - SIGN_ON_BONUS
      - S_CORP
      - FRINGE_BENEFITS
      - CONTRACTOR_LATE_PAYMENTS
      type: string
    SyncStatus:
      description: |-
        # The SyncStatus Object
        ### Description
        The `SyncStatus` object is used to represent the syncing state of an account

        ### Usage Example
        View the `SyncStatus` for an account to see how recently its models were synced.
      example:
        next_sync_start: 2021-03-30T20:44:18.662942Z
        model_name: Candidate
        model_id: ats.Candidate
        last_sync_start: 2021-03-30T19:44:18.695973Z
        is_initial_sync: true
        status: SYNCING
      properties:
        model_name:
          example: Candidate
          type: string
        model_id:
          example: ats.Candidate
          type: string
        last_sync_start:
          example: 2021-03-30T19:44:18.695973Z
          format: date-time
          type: string
        next_sync_start:
          example: 2021-03-30T20:44:18.662942Z
          format: date-time
          type: string
        status:
          allOf:
          - $ref: '#/components/schemas/SyncStatusStatusEnum'
          example: SYNCING
        is_initial_sync:
          example: true
          type: boolean
      required:
      - is_initial_sync
      - last_sync_start
      - model_id
      - model_name
      - next_sync_start
      - status
      type: object
    SyncStatusStatusEnum:
      enum:
      - SYNCING
      - DONE
      type: string
    Tax:
      description: |-
        # The Tax Object
        ### Description
        The `Tax` object is used to represent a tax for a given employee's payroll run. One run could include several taxes.

        ### Usage Example
        Fetch from the `LIST Taxes` endpoint and filter by `ID` to show all taxes.
      properties:
        id:
          example: e3a825fd-c38d-4095-a717-df98c4cb9ebc
          format: uuid
          readOnly: true
          type: string
        employee_payroll_run:
          description: The tax's employee payroll run.
          example: 35347df1-95e7-46e2-93cc-66f1191edca5
          format: uuid
          nullable: true
          type: string
        name:
          description: The tax's name.
          example: California State Income Tax
          nullable: true
          type: string
        amount:
          description: The tax amount.
          example: 100.25
          format: float
          nullable: true
          type: number
        employer_tax:
          description: Whether or not the employer is responsible for paying the tax.
          example: false
          nullable: true
          type: boolean
        remote_data:
          example:
          - path: /tax
            data:
            - Varies by platform
          items:
            additionalProperties: {}
            description: The full data pulled from the third-party API for an object.
            nullable: true
            type: object
          nullable: true
          type: array
      type: object
    Team:
      description: |-
        # The Team Object
        ### Description
        The `Team` object is used to represent a Team within a company. `Employee` objects are often grouped this way. Note that in the Merge HRIS API, company subdivisions are all represented with `Teams`, rather than `Teams` and `Departments`.

        ### Usage Example
        If you're building a way to filter by `Team`, you'd hit the `GET Teams` endpoint to fetch the `Teams`, and then use the `ID` of the team your user selects to filter the `GET Employees` endpoint.
      example:
        remote_id: "19202938"
        name: Engineering
        id: 13a72919-9fae-4f54-81ca-ddfd8712a1ba
        remote_data:
        - path: /teams
          data:
          - Varies by platform
      properties:
        id:
          example: 13a72919-9fae-4f54-81ca-ddfd8712a1ba
          format: uuid
          readOnly: true
          type: string
        remote_id:
          description: The third-party API ID of the matching object.
          example: "19202938"
          nullable: true
          type: string
        name:
          description: The team's name.
          example: Engineering
          nullable: true
          type: string
        remote_data:
          example:
          - path: /teams
            data:
            - Varies by platform
          items:
            $ref: '#/components/schemas/RemoteData'
          nullable: true
          readOnly: true
          type: array
      type: object
    TimeOff:
      description: |-
        # The TimeOff Object
        ### Description
        The `TimeOff` object is used to represent a Time Off Request filed by an employee.

        ### Usage Example
        Fetch from the `LIST TimeOffs` endpoint and filter by `ID` to show all time off requests.
      example:
        approver: 9efbc633-3387-4306-aa55-e2c635e6bb4f
        start_time: 2000-01-23T04:56:07.000+00:00
        amount: 13
        request_type: VACATION
        employee_note: Trip to Iowa. Miss those cornfields!
        remote_id: "19202938"
        end_time: 2000-01-23T04:56:07.000+00:00
        id: 91b2b905-e866-40c8-8be2-efe53827a0aa
        units: DAYS
        employee: d2f972d0-2526-434b-9409-4c3b468e08f0
        status: APPROVED
        remote_data:
        - path: /leave
          data:
          - Varies by platform
      properties:
        id:
          example: 91b2b905-e866-40c8-8be2-efe53827a0aa
          format: uuid
          readOnly: true
          type: string
        remote_id:
          description: The third-party API ID of the matching object.
          example: "19202938"
          nullable: true
          type: string
        employee:
          description: The employee requesting time off.
          example: d2f972d0-2526-434b-9409-4c3b468e08f0
          format: uuid
          nullable: true
          type: string
        approver:
          description: The employee approving the time off request.
          example: 9efbc633-3387-4306-aa55-e2c635e6bb4f
          format: uuid
          nullable: true
          type: string
        status:
          allOf:
          - $ref: '#/components/schemas/TimeOffStatusEnum'
          description: The status of this time off request.
          example: APPROVED
          nullable: true
        employee_note:
          description: The employee note for this time off request.
          example: Trip to Iowa. Miss those cornfields!
          nullable: true
          type: string
        units:
          allOf:
          - $ref: '#/components/schemas/UnitsEnum'
          description: The unit of time requested.
          example: DAYS
          nullable: true
        amount:
          description: The number of time off units requested.
          example: 13
          format: float
          nullable: true
          type: number
        request_type:
          allOf:
          - $ref: '#/components/schemas/RequestTypeEnum'
          description: The type of time off request.
          example: VACATION
          nullable: true
        start_time:
          description: The day and time of the start of the time requested off.
          format: date-time
          nullable: true
          type: string
        end_time:
          description: The day and time of the end of the time requested off.
          format: date-time
          nullable: true
          type: string
        remote_data:
          example:
          - path: /leave
            data:
            - Varies by platform
          items:
            $ref: '#/components/schemas/RemoteData'
          nullable: true
          readOnly: true
          type: array
      type: object
    TimeOffBalance:
      description: |-
        # The TimeOffBalance Object
        ### Description
        The `TimeOffBalance` object is used to represent a Time Off Balance for an employee.

        ### Usage Example
        Fetch from the `LIST TimeOffBalances` endpoint and filter by `ID` to show all time off balances.
      example:
        balance: 60.0
        remote_id: "19202938"
        id: 91b2b905-e866-40c8-8be2-efe53827a0aa
        used: 45.0
        employee: d2f972d0-2526-434b-9409-4c3b468e08f0
        remote_data:
        - path: /leave
          data:
          - Varies by platform
      properties:
        id:
          example: 91b2b905-e866-40c8-8be2-efe53827a0aa
          format: uuid
          readOnly: true
          type: string
        remote_id:
          description: The third-party API ID of the matching object.
          example: "19202938"
          nullable: true
          type: string
        employee:
          description: The employee the balance belongs to.
          example: d2f972d0-2526-434b-9409-4c3b468e08f0
          format: uuid
          nullable: true
          type: string
        balance:
          description: The current PTO balance.
          example: 60.0
          format: float
          nullable: true
          type: number
        used:
          description: The amount of PTO used.
          example: 45.0
          format: float
          nullable: true
          type: number
        remote_data:
          example:
          - path: /leave
            data:
            - Varies by platform
          items:
            $ref: '#/components/schemas/RemoteData'
          nullable: true
          readOnly: true
          type: array
      type: object
    TimeOffStatusEnum:
      enum:
      - REQUESTED
      - APPROVED
      - DECLINED
      - CANCELLED
      - DELETED
      type: string
    TypeEnum:
      enum:
      - SALARY
      - REIMBURSEMENT
      - OVERTIME
      - BONUS
      type: string
    UnitsEnum:
      enum:
      - HOURS
      - DAYS
      type: string
  securitySchemes:
    tokenAuth:
      description: Token-based authentication with required prefix "Token"
      in: header
      name: Authorization
      type: apiKey

