/*
 * Merge ATS API
 * The unified API for building rich integrations with multiple Applicant Tracking System platforms.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@merge.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package merge_ats_client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import merge_ats_client.model.LinkedAccountConditionRequest;

/**
 * LinkedAccountSelectiveSyncConfigurationRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-01-10T20:13:14.599893Z[Etc/UTC]")
public class LinkedAccountSelectiveSyncConfigurationRequest {
  public static final String SERIALIZED_NAME_LINKED_ACCOUNT_CONDITIONS = "linked_account_conditions";
  @SerializedName(SERIALIZED_NAME_LINKED_ACCOUNT_CONDITIONS)
  private List<LinkedAccountConditionRequest> linkedAccountConditions = new ArrayList<LinkedAccountConditionRequest>();


  public LinkedAccountSelectiveSyncConfigurationRequest linkedAccountConditions(List<LinkedAccountConditionRequest> linkedAccountConditions) {
    
    this.linkedAccountConditions = linkedAccountConditions;
    return this;
  }

  public LinkedAccountSelectiveSyncConfigurationRequest addLinkedAccountConditionsItem(LinkedAccountConditionRequest linkedAccountConditionsItem) {
    this.linkedAccountConditions.add(linkedAccountConditionsItem);
    return this;
  }

   /**
   * The conditions belonging to a selective sync.
   * @return linkedAccountConditions
  **/
  @ApiModelProperty(required = true, value = "The conditions belonging to a selective sync.")

  public List<LinkedAccountConditionRequest> getLinkedAccountConditions() {
    return linkedAccountConditions;
  }


  public void setLinkedAccountConditions(List<LinkedAccountConditionRequest> linkedAccountConditions) {
    this.linkedAccountConditions = linkedAccountConditions;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LinkedAccountSelectiveSyncConfigurationRequest linkedAccountSelectiveSyncConfigurationRequest = (LinkedAccountSelectiveSyncConfigurationRequest) o;
    return Objects.equals(this.linkedAccountConditions, linkedAccountSelectiveSyncConfigurationRequest.linkedAccountConditions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(linkedAccountConditions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LinkedAccountSelectiveSyncConfigurationRequest {\n");
    sb.append("    linkedAccountConditions: ").append(toIndentedString(linkedAccountConditions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

