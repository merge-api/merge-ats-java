/*
 * Merge ATS API
 * The unified API for building rich integrations with multiple Applicant Tracking System platforms.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@merge.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package merge_ats_client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import merge_ats_client.model.ConditionTypeEnum;
import merge_ats_client.model.OperatorSchema;

/**
 * ConditionSchema
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-01-10T20:13:14.599893Z[Etc/UTC]")
public class ConditionSchema {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private UUID id;

  public static final String SERIALIZED_NAME_COMMON_MODEL = "common_model";
  @SerializedName(SERIALIZED_NAME_COMMON_MODEL)
  private String commonModel;

  public static final String SERIALIZED_NAME_NATIVE_NAME = "native_name";
  @SerializedName(SERIALIZED_NAME_NATIVE_NAME)
  private String nativeName;

  public static final String SERIALIZED_NAME_FIELD_NAME = "field_name";
  @SerializedName(SERIALIZED_NAME_FIELD_NAME)
  private String fieldName;

  public static final String SERIALIZED_NAME_IS_UNIQUE = "is_unique";
  @SerializedName(SERIALIZED_NAME_IS_UNIQUE)
  private Boolean isUnique;

  public static final String SERIALIZED_NAME_CONDITION_TYPE = "condition_type";
  @SerializedName(SERIALIZED_NAME_CONDITION_TYPE)
  private ConditionTypeEnum conditionType;

  public static final String SERIALIZED_NAME_OPERATORS = "operators";
  @SerializedName(SERIALIZED_NAME_OPERATORS)
  private List<OperatorSchema> operators = new ArrayList<OperatorSchema>();


  public ConditionSchema id(UUID id) {
    
    this.id = id;
    return this;
  }

   /**
   * The ID of the condition schema. This ID is used when updating selective syncs for a linked account.
   * @return id
  **/
  @ApiModelProperty(required = true, value = "The ID of the condition schema. This ID is used when updating selective syncs for a linked account.")

  public UUID getId() {
    return id;
  }


  public void setId(UUID id) {
    this.id = id;
  }


   /**
   * The common model for which a condition schema is defined.
   * @return commonModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The common model for which a condition schema is defined.")

  public String getCommonModel() {
    return commonModel;
  }




  public ConditionSchema nativeName(String nativeName) {
    
    this.nativeName = nativeName;
    return this;
  }

   /**
   * User-facing *native condition* name. e.g. \&quot;Skip Manager\&quot;.
   * @return nativeName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "User-facing *native condition* name. e.g. \"Skip Manager\".")

  public String getNativeName() {
    return nativeName;
  }


  public void setNativeName(String nativeName) {
    this.nativeName = nativeName;
  }


  public ConditionSchema fieldName(String fieldName) {
    
    this.fieldName = fieldName;
    return this;
  }

   /**
   * The name of the field on the common model that this condition corresponds to, if they conceptually match. e.g. \&quot;location_type\&quot;.
   * @return fieldName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "The name of the field on the common model that this condition corresponds to, if they conceptually match. e.g. \"location_type\".")

  public String getFieldName() {
    return fieldName;
  }


  public void setFieldName(String fieldName) {
    this.fieldName = fieldName;
  }


  public ConditionSchema isUnique(Boolean isUnique) {
    
    this.isUnique = isUnique;
    return this;
  }

   /**
   * Whether this condition can only be applied once. If false, the condition can be AND&#39;d together multiple times.
   * @return isUnique
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether this condition can only be applied once. If false, the condition can be AND'd together multiple times.")

  public Boolean getIsUnique() {
    return isUnique;
  }


  public void setIsUnique(Boolean isUnique) {
    this.isUnique = isUnique;
  }


  public ConditionSchema conditionType(ConditionTypeEnum conditionType) {
    
    this.conditionType = conditionType;
    return this;
  }

   /**
   * Get conditionType
   * @return conditionType
  **/
  @ApiModelProperty(required = true, value = "")

  public ConditionTypeEnum getConditionType() {
    return conditionType;
  }


  public void setConditionType(ConditionTypeEnum conditionType) {
    this.conditionType = conditionType;
  }


  public ConditionSchema operators(List<OperatorSchema> operators) {
    
    this.operators = operators;
    return this;
  }

  public ConditionSchema addOperatorsItem(OperatorSchema operatorsItem) {
    this.operators.add(operatorsItem);
    return this;
  }

   /**
   * The schemas for the operators that can be used on a condition.
   * @return operators
  **/
  @ApiModelProperty(required = true, value = "The schemas for the operators that can be used on a condition.")

  public List<OperatorSchema> getOperators() {
    return operators;
  }


  public void setOperators(List<OperatorSchema> operators) {
    this.operators = operators;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConditionSchema conditionSchema = (ConditionSchema) o;
    return Objects.equals(this.id, conditionSchema.id) &&
        Objects.equals(this.commonModel, conditionSchema.commonModel) &&
        Objects.equals(this.nativeName, conditionSchema.nativeName) &&
        Objects.equals(this.fieldName, conditionSchema.fieldName) &&
        Objects.equals(this.isUnique, conditionSchema.isUnique) &&
        Objects.equals(this.conditionType, conditionSchema.conditionType) &&
        Objects.equals(this.operators, conditionSchema.operators);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, commonModel, nativeName, fieldName, isUnique, conditionType, operators);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConditionSchema {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    commonModel: ").append(toIndentedString(commonModel)).append("\n");
    sb.append("    nativeName: ").append(toIndentedString(nativeName)).append("\n");
    sb.append("    fieldName: ").append(toIndentedString(fieldName)).append("\n");
    sb.append("    isUnique: ").append(toIndentedString(isUnique)).append("\n");
    sb.append("    conditionType: ").append(toIndentedString(conditionType)).append("\n");
    sb.append("    operators: ").append(toIndentedString(operators)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

