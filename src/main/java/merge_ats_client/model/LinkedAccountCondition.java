/*
 * Merge ATS API
 * The unified API for building rich integrations with multiple Applicant Tracking System platforms.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@merge.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package merge_ats_client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.UUID;

/**
 * LinkedAccountCondition
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-01-10T20:13:14.599893Z[Etc/UTC]")
public class LinkedAccountCondition {
  public static final String SERIALIZED_NAME_CONDITION_SCHEMA_ID = "condition_schema_id";
  @SerializedName(SERIALIZED_NAME_CONDITION_SCHEMA_ID)
  private UUID conditionSchemaId;

  public static final String SERIALIZED_NAME_COMMON_MODEL = "common_model";
  @SerializedName(SERIALIZED_NAME_COMMON_MODEL)
  private String commonModel;

  public static final String SERIALIZED_NAME_NATIVE_NAME = "native_name";
  @SerializedName(SERIALIZED_NAME_NATIVE_NAME)
  private String nativeName;

  public static final String SERIALIZED_NAME_OPERATOR = "operator";
  @SerializedName(SERIALIZED_NAME_OPERATOR)
  private String operator;

  public static final String SERIALIZED_NAME_VALUE = "value";
  @SerializedName(SERIALIZED_NAME_VALUE)
  private Object value = null;

  public static final String SERIALIZED_NAME_FIELD_NAME = "field_name";
  @SerializedName(SERIALIZED_NAME_FIELD_NAME)
  private String fieldName;


  public LinkedAccountCondition conditionSchemaId(UUID conditionSchemaId) {
    
    this.conditionSchemaId = conditionSchemaId;
    return this;
  }

   /**
   * The ID indicating which condition schema to use for a specific condition.
   * @return conditionSchemaId
  **/
  @ApiModelProperty(required = true, value = "The ID indicating which condition schema to use for a specific condition.")

  public UUID getConditionSchemaId() {
    return conditionSchemaId;
  }


  public void setConditionSchemaId(UUID conditionSchemaId) {
    this.conditionSchemaId = conditionSchemaId;
  }


   /**
   * The common model for a specific condition.
   * @return commonModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The common model for a specific condition.")

  public String getCommonModel() {
    return commonModel;
  }




  public LinkedAccountCondition nativeName(String nativeName) {
    
    this.nativeName = nativeName;
    return this;
  }

   /**
   * User-facing *native condition* name. e.g. \&quot;Skip Manager\&quot;.
   * @return nativeName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "User-facing *native condition* name. e.g. \"Skip Manager\".")

  public String getNativeName() {
    return nativeName;
  }


  public void setNativeName(String nativeName) {
    this.nativeName = nativeName;
  }


  public LinkedAccountCondition operator(String operator) {
    
    this.operator = operator;
    return this;
  }

   /**
   * The operator for a specific condition.
   * @return operator
  **/
  @ApiModelProperty(required = true, value = "The operator for a specific condition.")

  public String getOperator() {
    return operator;
  }


  public void setOperator(String operator) {
    this.operator = operator;
  }


   /**
   * The value for a condition.
   * @return value
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The value for a condition.")

  public Object getValue() {
    return value;
  }




  public LinkedAccountCondition fieldName(String fieldName) {
    
    this.fieldName = fieldName;
    return this;
  }

   /**
   * The name of the field on the common model that this condition corresponds to, if they conceptually match. e.g. \&quot;location_type\&quot;.
   * @return fieldName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "The name of the field on the common model that this condition corresponds to, if they conceptually match. e.g. \"location_type\".")

  public String getFieldName() {
    return fieldName;
  }


  public void setFieldName(String fieldName) {
    this.fieldName = fieldName;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LinkedAccountCondition linkedAccountCondition = (LinkedAccountCondition) o;
    return Objects.equals(this.conditionSchemaId, linkedAccountCondition.conditionSchemaId) &&
        Objects.equals(this.commonModel, linkedAccountCondition.commonModel) &&
        Objects.equals(this.nativeName, linkedAccountCondition.nativeName) &&
        Objects.equals(this.operator, linkedAccountCondition.operator) &&
        Objects.equals(this.value, linkedAccountCondition.value) &&
        Objects.equals(this.fieldName, linkedAccountCondition.fieldName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(conditionSchemaId, commonModel, nativeName, operator, value, fieldName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LinkedAccountCondition {\n");
    sb.append("    conditionSchemaId: ").append(toIndentedString(conditionSchemaId)).append("\n");
    sb.append("    commonModel: ").append(toIndentedString(commonModel)).append("\n");
    sb.append("    nativeName: ").append(toIndentedString(nativeName)).append("\n");
    sb.append("    operator: ").append(toIndentedString(operator)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    fieldName: ").append(toIndentedString(fieldName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

